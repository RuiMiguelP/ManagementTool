<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>New features in Red Hat CodeReady Studio 12.16.0.GA and JBoss Tools 4.16.0.Final for Eclipse 2020-06</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/KDIbwUVsn-g/" /><category term="Containers" /><category term="Developer Tools" /><category term="Java" /><category term="Kubernetes" /><category term="Linux" /><category term="Mac" /><category term="Quarkus" /><category term="Windows" /><category term="codeready" /><category term="Eclipse IDE" /><category term="Jakarta EE" /><category term="JavaEE" /><category term="jboss tools" /><category term="odo" /><category term="OpenShift 4" /><author><name>Jeff Maury</name></author><id>https://developers.redhat.com/blog/?p=750567</id><updated>2020-07-21T13:57:00Z</updated><published>2020-07-21T13:57:00Z</published><content type="html">&lt;p&gt;&lt;a target="_blank" rel="nofollow" href="https://tools.jboss.org/downloads/jbosstools/2020-06/4.16.0.Final.html"&gt;JBoss Tools 4.16.0&lt;/a&gt; and &lt;a href="https://developers.redhat.com/products/codeready-studio/overview"&gt;Red Hat CodeReady Studio 12.16&lt;/a&gt; for Eclipse 4.16 (2020-06) are now available. For this release, we focused on improving &lt;a href="https://developers.redhat.com/products/quarkus/getting-started"&gt;Quarkus&lt;/a&gt;&amp;#8211; and container-based development and fixing bugs. We also updated the &lt;a target="_blank" rel="nofollow" href="https://tools.jboss.org/features/hibernate.html"&gt;Hibernate Tools&lt;/a&gt; runtime provider and Java Developer Tools (JDT) extensions, which are now compatible with &lt;a href="https://developers.redhat.com/topics/enterprise-java"&gt;Java&lt;/a&gt; 14. Additionally, we made many changes to platform views, dialogs, and toolbars in the user interface (UI).&lt;/p&gt; &lt;p&gt;This article is an overview of what&amp;#8217;s new in JBoss Tools 4.16.0 and Red Hat CodeReady Studio 12.16 for Eclipse 4.16 (2020-06).&lt;/p&gt; &lt;h2&gt;Installation&lt;/h2&gt; &lt;p&gt;First, let&amp;#8217;s look at how to install these updates. CodeReady Studio (previously Red Hat Developer Studio) comes with everything pre-bundled in its installer. Simply download the installer from the &lt;a href="https://developers.redhat.com/products/codeready-studio/overview"&gt;Red Hat CodeReady Studio product page&lt;/a&gt; and run it as follows:&lt;/p&gt; &lt;p&gt;&lt;span id="more-750567"&gt;&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;$ java -jar codereadystudio-&amp;#60;installername&amp;#62;.jar &lt;/pre&gt; &lt;p&gt;Installing JBoss Tools 4.16.0—aka &amp;#8220;bring-your-own Eclipse (BYOE) CodeReady Studio&amp;#8221;—requires a bit more effort. This release requires at least Eclipse 4.16 (2020-06), but we recommend installing the latest &lt;a href="http://www.eclipse.org/downloads/packages/release/2020-06/r/eclipse-ide-java-ee-developers"&gt;Eclipse 4.16 2020-06 Java EE bundle&lt;/a&gt;. Installing the newest bundle ensures that you get the most current Java dependencies.&lt;/p&gt; &lt;p&gt;Once you have Eclipse 4.16 (2020-06) or higher installed, you can open the &lt;strong&gt;Eclipse Marketplace&lt;/strong&gt; tab and look for either &lt;strong&gt;JBoss Tools&lt;/strong&gt; or &lt;strong&gt;Red Hat CodeReady Studio&lt;/strong&gt;. Alternatively, you could &lt;a target="_blank" rel="nofollow" href="http://download.jboss.org/jbosstools/photon/stable/updates/"&gt;download JBoss Tools 4.16.0&lt;/a&gt; directly from our update site.&lt;/p&gt; &lt;p&gt;In the next sections, we&amp;#8217;ll look at updates for the new Red Hat OpenShift 4.5 release and improvements to Quarkus and container-based development. We&amp;#8217;ll also look at updates to the Hibernate Tools runtime provider, and to the Java Developer Tools package for JDK 14.&lt;/p&gt; &lt;h2&gt;OpenShift&lt;/h2&gt; &lt;p&gt;We&amp;#8217;ve added secure URL support and support for the new &lt;a href="https://developers.redhat.com/products/openshift/getting-started"&gt;Red Hat OpenShift Container Platform 4.5&lt;/a&gt; to this release.&lt;/p&gt; &lt;h3&gt;Secure URL support&lt;/h3&gt; &lt;p&gt;It is now possible to create secured URLs in OpenShift&amp;#8217;s Application Explorer view. If you select this option, the created URL will be accessible through &lt;code&gt;https&lt;/code&gt;, as shown in Figure 1:&lt;/p&gt; &lt;div id="attachment_750577" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ba53dc07.png"&gt;&lt;img aria-describedby="caption-attachment-750577" class="wp-image-750577" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ba53dc07.png" alt="A screenshot of the &amp;#34;Create a URL&amp;#34; dialog." width="640" height="442" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ba53dc07.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ba53dc07-300x207.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750577" class="wp-caption-text"&gt;Figure 1: Create a secured URL in OpenShift&amp;#8217;s Application Explorer view.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;When a URL is displayed in the tree, the icon now has a secure lock indicator, shown in Figure 2:&lt;/p&gt; &lt;div id="attachment_750587" style="width: 288px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081bcc5595c.png"&gt;&lt;img aria-describedby="caption-attachment-750587" class="wp-image-750587 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081bcc5595c.png" alt="A screenshot of the URL in a tree, with the secure lock indicator." width="278" height="118" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750587" class="wp-caption-text"&gt;Figure 2: The secure lock indicator in the URL tree.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;OpenShift Container Platform 4.5&lt;/h3&gt; &lt;p&gt;Red Hat OpenShift Container Platform (OCP) 4.5 is now available, and JBoss Tools is transparently compatible with this major release. Just define your connection to your OCP 4.4-based cluster the same way that you did for an OCP 3 cluster, and use the tooling!&lt;/p&gt; &lt;h2&gt;Server tools&lt;/h2&gt; &lt;p&gt;We&amp;#8217;ve made one update to the server tools for this release, adding a server adapter for WildFly 20. The new server adapter adds support for Java EE 8, Jakarta EE 8, and MicroProfile 3.3.&lt;/p&gt; &lt;h2&gt;Hibernate Tools&lt;/h2&gt; &lt;p&gt;We made the following additions and updates to the available Hibernate Tools runtime providers:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.17.Final and Hibernate Tools version 5.4.17.Final.&lt;/li&gt; &lt;li&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.17.Final and Hibernate Tools version 5.3.17.Final.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Platform&lt;/h2&gt; &lt;p&gt;We made many changes to platform views, dialogs, and toolbars in the UI, which I&amp;#8217;ll discuss in the next sections.&lt;/p&gt; &lt;h3&gt;Views, dialogs, and toolbars&lt;/h3&gt; &lt;p&gt;You can now use the New File wizard to create missing folders directly, without explicitly creating folders beforehand. The screenshot in Figure 3 shows the New File wizard:&lt;/p&gt; &lt;div id="attachment_750597" style="width: 356px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081cbf35b98.png"&gt;&lt;img aria-describedby="caption-attachment-750597" class="wp-image-750597 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081cbf35b98.png" alt="A screenshot of the New File wizard." width="346" height="526" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081cbf35b98.png 346w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081cbf35b98-197x300.png 197w" sizes="(max-width: 346px) 100vw, 346px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750597" class="wp-caption-text"&gt;Figure 3: Use the New File wizard to create missing folders.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Text editors&lt;/h3&gt; &lt;p&gt;Linux and Mac OS already supported this feature, and now we&amp;#8217;ve added support for font ligatures on Windows in Eclipse. Use the following preference to specify the font with ligatures that you want for your text editors:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;General &amp;#62; Appearance &amp;#62; Colors and Font &amp;#62; Basic &amp;#62; Text Font&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Figure 4 shows a screenshot of ligatures rendered in the Java editor on Windows 10:&lt;/p&gt; &lt;div id="attachment_750607" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081cf3b2b48.png"&gt;&lt;img aria-describedby="caption-attachment-750607" class="wp-image-750607" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081cf3b2b48.png" alt="A screenshot of ligatures rendered in the Java editor on Windows 10." width="640" height="297" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081cf3b2b48.png 665w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081cf3b2b48-300x139.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750607" class="wp-caption-text"&gt;Figure 4: Ligatures rendered in the Java editor on Windows 10.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Themes and styling&lt;/h3&gt; &lt;p&gt;The Eclipse dark theme now uses the Windows-native dark scrollbars. We also retired the software solution for the editor area. Figure 5 shows an open project with the new dark scrollbar:&lt;/p&gt; &lt;div id="attachment_750617" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d1d5586a.png"&gt;&lt;img aria-describedby="caption-attachment-750617" class="wp-image-750617" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d1d5586a.png" alt="A screenshot of an open project with the new dark scrollbar." width="640" height="560" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d1d5586a.png 700w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d1d5586a-300x263.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750617" class="wp-caption-text"&gt;Figure 5: An open project with the new dark scrollbar.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Eclipse Windows toolbar styling aligned with Windows 10&lt;/h4&gt; &lt;p&gt;We updated the default Eclipse light theme to align better with Windows 10&amp;#8217;s default theme. Figure 6 shows the old light theme:&lt;/p&gt; &lt;div id="attachment_750627" style="width: 546px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d413022b.png"&gt;&lt;img aria-describedby="caption-attachment-750627" class="wp-image-750627 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d413022b.png" alt="A screenshot of the old light theme." width="536" height="534" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d413022b.png 536w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d413022b-150x150.png 150w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d413022b-300x300.png 300w" sizes="(max-width: 536px) 100vw, 536px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750627" class="wp-caption-text"&gt;Figure 6: The old light theme.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Figure 7 shows the new light theme:&lt;/p&gt; &lt;div id="attachment_750637" style="width: 544px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d5aa3a5d.png"&gt;&lt;img aria-describedby="caption-attachment-750637" class="wp-image-750637 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d5aa3a5d.png" alt="A screenshot of the new light theme." width="534" height="537" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d5aa3a5d.png 534w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d5aa3a5d-150x150.png 150w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d5aa3a5d-298x300.png 298w" sizes="(max-width: 534px) 100vw, 534px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750637" class="wp-caption-text"&gt;Figure 7: The new light theme.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Square tabs for views&lt;/h4&gt; &lt;p&gt;By default, the Eclipse IDE now uses square tabs for views, as shown in Figure 8:&lt;/p&gt; &lt;div id="attachment_750647" style="width: 615px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d8782b8b.png"&gt;&lt;img aria-describedby="caption-attachment-750647" class="wp-image-750647 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d8782b8b.png" alt="A screenshot of the Eclipse IDE with square tabs for views." width="605" height="141" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d8782b8b.png 605w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d8782b8b-300x70.png 300w" sizes="(max-width: 605px) 100vw, 605px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750647" class="wp-caption-text"&gt;Figure 8: The Eclipse IDE now uses square tabs for views.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;We also added a preference for users who want to switch back to using round tabs, as shown in Figure 9:&lt;/p&gt; &lt;div id="attachment_750657" style="width: 458px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d9f98b97.png"&gt;&lt;img aria-describedby="caption-attachment-750657" class="wp-image-750657 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d9f98b97.png" alt="A screenshot of the option to use round tabs." width="448" height="193" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d9f98b97.png 448w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d9f98b97-300x129.png 300w" sizes="(max-width: 448px) 100vw, 448px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750657" class="wp-caption-text"&gt;Figure 9. Users can select the preference for round tabs.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Consistent toolbar colors in dark theme&lt;/h4&gt; &lt;p&gt;The toolbar styling in the dark theme is consistent with these updates, as shown in Figure 10:&lt;/p&gt; &lt;div id="attachment_750667" style="width: 257px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081dc03f106.png"&gt;&lt;img aria-describedby="caption-attachment-750667" class="wp-image-750667 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081dc03f106.png" alt="A screenshot of square tabs in the Eclipse dark theme." width="247" height="118" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750667" class="wp-caption-text"&gt;Figure 10: Square tabs in the Eclipse dark theme.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Preferences&lt;/h3&gt; &lt;p&gt;We&amp;#8217;ve made a number of changes and additions to the platform preferences.&lt;/p&gt; &lt;h4&gt;Verify installation operations against the current JRE&lt;/h4&gt; &lt;p&gt;On by default, the &lt;strong&gt;Verify provisioning operation is compatible with current running JRE &lt;/strong&gt;option is available from the Install/Update preferences page. This option enables extra checks when installing, updating, or uninstalling content that is required to run the IDE. It uses the standard dialogs to report an error. If any newly installed unit requires a different Java runtime from the one that&amp;#8217;s currently in use, the operation will fail with a useful message. Figure 11 shows the Install/Update preferences page with the new option:&lt;/p&gt; &lt;div id="attachment_750677" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081df230ed8.png"&gt;&lt;img aria-describedby="caption-attachment-750677" class="wp-image-750677" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081df230ed8.png" alt="A screenshot of the Install/Update preferences page with the option to verify compatible provisioning." width="640" height="324" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081df230ed8.png 666w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081df230ed8-300x152.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750677" class="wp-caption-text"&gt;Figure 11: The Install/Update preferences page with the option to verify compatible provisioning.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Figure 12 shows the error message after attempting to install a unit that requires Java 14 while running the Eclipse IDE with an older Java version:&lt;/p&gt; &lt;div id="attachment_750687" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e0cf2d7c.png"&gt;&lt;img aria-describedby="caption-attachment-750687" class="wp-image-750687" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e0cf2d7c.png" alt="A screenshot of the error message with incompatible dependencies listed." width="640" height="570" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e0cf2d7c.png 690w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e0cf2d7c-300x267.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750687" class="wp-caption-text"&gt;Figure 12: The error message lists the incompatible dependencies.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Renaming resources inline&lt;/h4&gt; &lt;p&gt;We added the option to either rename resources inline or use a dialog to rename them in the 4.15 release. Until now, it has been available as a radio button, but we changed it to a checkbox, as shown in Figure 13:&lt;/p&gt; &lt;div id="attachment_750697" style="width: 510px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e34b977a.png"&gt;&lt;img aria-describedby="caption-attachment-750697" class="wp-image-750697 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e34b977a.png" alt="A screenshot of &amp;#34;Rename resources inline&amp;#34; checkbox option." width="500" height="311" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e34b977a.png 500w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e34b977a-300x187.png 300w" sizes="(max-width: 500px) 100vw, 500px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750697" class="wp-caption-text"&gt;Figure 13: The &amp;#8216;Rename resources inline&amp;#8217; option is now a checkbox.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Debugging&lt;/h3&gt; &lt;p&gt;We added &lt;strong&gt;Select All&lt;/strong&gt; and &lt;strong&gt;Deselect All&lt;/strong&gt; buttons to the Import breakpoints wizard for debugging. You can now use these buttons to select or deselect all the breakpoint markers when importing breakpoints, as shown in Figure 14:&lt;/p&gt; &lt;div id="attachment_750707" style="width: 420px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e60f1527.png"&gt;&lt;img aria-describedby="caption-attachment-750707" class="wp-image-750707 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e60f1527.png" alt="A screenshot of the Import Breakpoints dialog with the new Select All and Deselect All options." width="410" height="447" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e60f1527.png 410w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e60f1527-275x300.png 275w" sizes="(max-width: 410px) 100vw, 410px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750707" class="wp-caption-text"&gt;Figure 14: Select All and Deselect All enable faster decisions when importing breakpoints.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;General updates&lt;/h3&gt; &lt;p&gt;Two general updates are worth sharing.&lt;/p&gt; &lt;h4&gt;Show key bindings when invoking a command&lt;/h4&gt; &lt;p&gt;For presentations, screencasts, and for learning purposes, it is very helpful to show the corresponding key binding when invoking a command. We added that feature some releases ago, as shown in Figure 15:&lt;/p&gt; &lt;div id="attachment_750717" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e96541d7.png"&gt;&lt;img aria-describedby="caption-attachment-750717" class="wp-image-750717 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e96541d7-1024x332.png" alt="A screenshot of the key binding for the Quick Switch Editor command." width="640" height="208" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e96541d7-1024x332.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e96541d7-300x97.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e96541d7-768x249.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e96541d7.png 1315w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750717" class="wp-caption-text"&gt;Figure 15: Hover over a command to see the corresponding key binding.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;With the 4.16 release, it is now possible to enable this feature separately or together for keyboard interactions and mouse clicks. You can enable the feature for mouse clicks only, for keyboard interactions only, or for both. Showing key bindings only for mouse clicks is helpful for users who want to learn the existing key bindings.&lt;/p&gt; &lt;p&gt;Enable the &lt;b&gt;Show key binding when command is invoked&lt;/b&gt; feature via the Preferences dialog on the &lt;strong&gt;General &amp;#62; Keys&lt;/strong&gt; preference page. Use the command &lt;strong&gt;Toggle Show Key Bindings&lt;/strong&gt; to change this setting quickly. Figure 16 shows this option under the Find Actions dialog:&lt;/p&gt; &lt;div id="attachment_750727" style="width: 571px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081eb37b1cc.png"&gt;&lt;img aria-describedby="caption-attachment-750727" class="wp-image-750727 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081eb37b1cc.png" alt="A screenshot of key binding options under the Find Actions dialog." width="561" height="199" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081eb37b1cc.png 561w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081eb37b1cc-300x106.png 300w" sizes="(max-width: 561px) 100vw, 561px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750727" class="wp-caption-text"&gt;Figure 16: Key binding options under the Find Actions dialog.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Ant 1.10.8&lt;/h4&gt; &lt;p&gt;Eclipse has adopted Ant version 1.10.8.&lt;/p&gt; &lt;h2&gt;Java Development Tools (JDT)&lt;/h2&gt; &lt;p&gt;The most significant Java Development Tools update is support for Java 14. Eclipse JDT now supports Java 14 for the Eclipse 4.16 release. The release notably includes the following Java 14 features:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;JEP 361: Switch expressions (Standard)&lt;/li&gt; &lt;li&gt;JEP 359: Records (Preview)&lt;/li&gt; &lt;li&gt;JEP 368: Text blocks (Second Preview)&lt;/li&gt; &lt;li&gt;JEP 305: Pattern matching for &lt;code&gt;Instanceof&lt;/code&gt; (Preview)&lt;/li&gt; &lt;/ul&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: The Preview option should be on for preview language features. For an informal introduction to the support, refer to the &lt;a target="_blank" rel="nofollow" href="https://wiki.eclipse.org/Java14/Examples"&gt;Java 14 examples wiki&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;How to set your JDK compliance to 14&lt;/h3&gt; &lt;p&gt;As shown in Figure 17, you can use &lt;strong&gt;Preferences &amp;#62; Java &amp;#62; Compiler&lt;/strong&gt; to set your JDK compiler compliance to 14 and then enable the preview features:&lt;/p&gt; &lt;div id="attachment_750737" style="width: 578px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ef319772.png"&gt;&lt;img aria-describedby="caption-attachment-750737" class="wp-image-750737 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ef319772.png" alt="A screenshot of the options to set the set the JDK compiler compliance to 14 and enable the preview features." width="568" height="167" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ef319772.png 568w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ef319772-300x88.png 300w" sizes="(max-width: 568px) 100vw, 568px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750737" class="wp-caption-text"&gt;Figure 17: Set your JDK compiler compliance to 14 and enable the preview features.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;You can create a new record in one of two ways: Using a template or using the Record Creation wizard.&lt;/p&gt; &lt;h4&gt;Use a template to create a new record&lt;/h4&gt; &lt;p&gt;You can use the &lt;code&gt;new_record&lt;/code&gt; template to create a record in an empty &lt;code&gt;.java&lt;/code&gt; file, as shown in Figure 18:&lt;/p&gt; &lt;div id="attachment_750747" style="width: 564px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f0c6a548.png"&gt;&lt;img aria-describedby="caption-attachment-750747" class="wp-image-750747 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f0c6a548.png" alt="A screenshot of the new_record template option." width="554" height="164" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f0c6a548.png 554w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f0c6a548-300x89.png 300w" sizes="(max-width: 554px) 100vw, 554px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750747" class="wp-caption-text"&gt;Figure 18: Use the new_record template to create a record in an empty .java file.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Use the Record Creation wizard&lt;/h4&gt; &lt;p&gt;Alternatively, you can use the Record Creation wizard:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Right-click on the &lt;strong&gt;Project &amp;#62; New &amp;#62; Record&lt;/strong&gt;.&lt;/li&gt; &lt;li&gt;Right-click on the &lt;strong&gt;Project &amp;#62; New &amp;#62; Other and search for Record&lt;/strong&gt;.&lt;/li&gt; &lt;li&gt;Right-click on the &lt;strong&gt;Project &amp;#62; New &amp;#62; Other &amp;#62; Java &amp;#62; Record&lt;/strong&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The Record Creation wizard comes up, as shown in Figure 19:&lt;/p&gt; &lt;div id="attachment_750757" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f2568ca2.png"&gt;&lt;img aria-describedby="caption-attachment-750757" class="wp-image-750757" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f2568ca2.png" alt="A screenshot of the Record Creation wizard." width="640" height="575" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f2568ca2.png 686w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f2568ca2-300x269.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750757" class="wp-caption-text"&gt;Figure 19: The Record Creation wizard.&lt;/p&gt;&lt;/div&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: In older workspaces, the &lt;strong&gt;Record&lt;/strong&gt; entry may not appear directly under the &lt;strong&gt;New&lt;/strong&gt; menu in the Java perspective. You can resolve this by either using a new workspace or launching Eclipse with the option &lt;code&gt;-clearPersistedState&lt;/code&gt; for your existing workspace.&lt;/p&gt; &lt;h3&gt;How to enable the JDK 14 preview features&lt;/h3&gt; &lt;p&gt;You can quickly enable the JDK 14 preview features for an applicable Java project by right-clicking on the project and selecting &lt;strong&gt;Configure &amp;#62; Enable preview features&lt;/strong&gt;, as shown in Figure 20:&lt;/p&gt; &lt;div id="attachment_750767" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f3eb3406.png"&gt;&lt;img aria-describedby="caption-attachment-750767" class="wp-image-750767" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f3eb3406.png" alt="A screenshot of an open Java project with the &amp;#34;Enable preview features&amp;#34; option selected." width="640" height="656" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f3eb3406.png 690w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f3eb3406-293x300.png 293w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750767" class="wp-caption-text"&gt;Figure 20: Enable the JDK 14 preview features for a Java project.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;As shown in Figure 21, you can also use the opened &lt;strong&gt;Project properties&lt;/strong&gt; dialog to change the default severity level to &amp;#8220;Warning&amp;#8221; for compilation issues with the preview features:&lt;/p&gt; &lt;div id="attachment_750777" style="width: 604px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f5c298eb.png"&gt;&lt;img aria-describedby="caption-attachment-750777" class="wp-image-750777 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f5c298eb.png" alt="A screenshot of the option to change the default severity level to 'Warning.'" width="594" height="265" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f5c298eb.png 594w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f5c298eb-300x134.png 300w" sizes="(max-width: 594px) 100vw, 594px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750777" class="wp-caption-text"&gt;Figure 21: Change the default severity level to &amp;#8216;Warning&amp;#8217; for potential compilation issues.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Updates to the Java editor&lt;/h3&gt; &lt;p&gt;We&amp;#8217;ve made a handful of updates to the Java editor, some of them to accommodate the new preview features.&lt;/p&gt; &lt;h4&gt;Nonblocking Java code completion&lt;/h4&gt; &lt;p&gt;By default, code completions in the Java editor are now configured to be computed (when possible) in a separate non-UI thread. This configuration prevents UI freezes in case of long computations.&lt;/p&gt; &lt;p&gt;If you want to restore the legacy behavior, the path is &lt;strong&gt;Preferences &amp;#62; Java &amp;#62; Editor &amp;#62; Content Assist &amp;#62; Advanced&lt;/strong&gt;, where you would uncheck the &lt;b&gt;Enable nonblocking completion&lt;/b&gt; checkbox. Integrators can change the value of the &lt;code&gt;org.eclipse.jdt.ui.content_assist_noUIThread_computation&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. Figure 22 shows the option to enable (or disable) nonblocking completion:&lt;/p&gt; &lt;div id="attachment_750787" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f7eea4b7.png"&gt;&lt;img aria-describedby="caption-attachment-750787" class="wp-image-750787" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f7eea4b7.png" alt="A screenshot of the option to enable or disable nonblocking completion." width="640" height="804" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f7eea4b7.png 800w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f7eea4b7-239x300.png 239w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f7eea4b7-768x965.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750787" class="wp-caption-text"&gt;Figure 22: Enable (or disable) nonblocking completion.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Merge control workflows&lt;/h4&gt; &lt;p&gt;When it&amp;#8217;s possible, a new cleanup merges conditions of &lt;code&gt;if/else if/else&lt;/code&gt; that have the same blocks. An &lt;code&gt;else&lt;/code&gt; block could be different and therefore, won&amp;#8217;t be merged. One condition might be made opposite to allow the merge. The conditions are merged with &lt;code&gt;||&lt;/code&gt; to keep the control workflow the same. Adding a parenthesis avoids the priority issue. We&amp;#8217;ve kept most of the brackets, formatting, and comments.&lt;/p&gt; &lt;p&gt;To select the cleanup, invoke &lt;strong&gt;Source &amp;#62; Clean Up &lt;/strong&gt;and use a custom profile. Select the &lt;strong&gt;Unnecessary Code&lt;/strong&gt; tab on the &lt;strong&gt;Configure&lt;/strong&gt; dialog. Select &lt;strong&gt;Merge conditions of if/else if/else that have the same blocks&lt;/strong&gt;. Figure 23 shows the merge option for unnecessary code:&lt;/p&gt; &lt;div id="attachment_750797" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fa1cfe5e.png"&gt;&lt;img aria-describedby="caption-attachment-750797" class="wp-image-750797" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fa1cfe5e.png" alt="A screenshot of the merge option for unnecessary code." width="640" height="453" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fa1cfe5e.png 800w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fa1cfe5e-300x212.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fa1cfe5e-768x543.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750797" class="wp-caption-text"&gt;Figure 23: The merge option for unnecessary code.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;As an example, for the code shown in Figure 24:&lt;/p&gt; &lt;div id="attachment_750807" style="width: 456px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fb8b6841.png"&gt;&lt;img aria-describedby="caption-attachment-750807" class="wp-image-750807 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fb8b6841.png" alt="A screenshot of the The MyClass.java class." width="446" height="311" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fb8b6841.png 446w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fb8b6841-300x209.png 300w" sizes="(max-width: 446px) 100vw, 446px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750807" class="wp-caption-text"&gt;Figure 24: The MyClass.java class before cleanup.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;you would get the result shown in Figure 25, following the cleanup:&lt;/p&gt; &lt;div id="attachment_750817" style="width: 455px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fd1abb74.png"&gt;&lt;img aria-describedby="caption-attachment-750817" class="wp-image-750817 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fd1abb74.png" alt="A screenshot of the MyClass.java class after cleanup." width="445" height="310" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fd1abb74.png 445w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fd1abb74-300x209.png 300w" sizes="(max-width: 445px) 100vw, 445px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750817" class="wp-caption-text"&gt;Figure 25: The MyClass.java class after cleanup.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Local variable type inference&lt;/h4&gt; &lt;p&gt;Another new cleanup uses the &lt;code&gt;var&lt;/code&gt; keyword for the local variable whenever possible. Note that this cleanup is enabled only for Java 10 and higher.&lt;/p&gt; &lt;p&gt;The cleanup replaces the explicit variable type with &lt;code&gt;var&lt;/code&gt; when this type can be known by the variable initialization. It also replaces the diamond operator in instance creation with a parameterized type. Eventually, the cleanup adds a suffix to the initialization number literal to match the variable type. In any case, the variable type remains exactly the same.&lt;/p&gt; &lt;p&gt;To select the cleanup, invoke &lt;strong&gt;Source &amp;#62; Clean Up&lt;/strong&gt; and use a custom profile. On the &lt;strong&gt;Configure&lt;/strong&gt; dialog, open the &lt;strong&gt;Code Style&lt;/strong&gt; tab, then select &lt;strong&gt;Use the local variable type inference&lt;/strong&gt;, as shown in Figure 26:&lt;/p&gt; &lt;div id="attachment_750827" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ff080a0f.png"&gt;&lt;img aria-describedby="caption-attachment-750827" class="wp-image-750827" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ff080a0f.png" alt="A screenshot of the option to use local variable type inference in Java 10 or higher" width="640" height="585" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ff080a0f.png 800w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ff080a0f-300x274.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ff080a0f-768x702.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750827" class="wp-caption-text"&gt;Figure 26: Use local variable type inference in Java 10 or higher.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;As an example, for the code in Figure 27:&lt;/p&gt; &lt;div id="attachment_750837" style="width: 569px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f08200c68ec2.png"&gt;&lt;img aria-describedby="caption-attachment-750837" class="wp-image-750837 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f08200c68ec2.png" alt="A screenshot of the MyClass.java class before cleanup." width="559" height="266" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f08200c68ec2.png 559w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f08200c68ec2-300x143.png 300w" sizes="(max-width: 559px) 100vw, 559px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750837" class="wp-caption-text"&gt;Figure 27: MyClass.java before cleanup.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;you would get the result shown in Figure 28, following the cleanup:&lt;/p&gt; &lt;div id="attachment_750847" style="width: 569px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f082032341e2.png"&gt;&lt;img aria-describedby="caption-attachment-750847" class="wp-image-750847 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f082032341e2.png" alt="A screenshot of MyClass.java after cleanup." width="559" height="266" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f082032341e2.png 559w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f082032341e2-300x143.png 300w" sizes="(max-width: 559px) 100vw, 559px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750847" class="wp-caption-text"&gt;Figure 28: MyClass.java after cleanup.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Prefer lazy logical operators&lt;/h4&gt; &lt;p&gt;Another new cleanup replaces eager logical operators with lazy operators whenever possible. The cleanup replaces &lt;code&gt;|&lt;/code&gt; and &lt;code&gt;&amp;#38;&lt;/code&gt; with &lt;code&gt;||&lt;/code&gt; and &lt;code&gt;&amp;#38;&amp;#38;&lt;/code&gt;, respectively. It only does so when operands such as assignments, increments, decrements, object creations, or method calls won&amp;#8217;t cause a side-effect. If an operand could cause a side-effect, the cleanup will keep the eager operator. It also leaves binary operations unchanged.&lt;/p&gt; &lt;p&gt;To select the cleanup, invoke &lt;strong&gt;Source &amp;#62; Clean Up&lt;/strong&gt; and use a custom profile. In the &lt;strong&gt;Configure&lt;/strong&gt; dialog, open the &lt;strong&gt;Code Style&lt;/strong&gt; tab, then select &lt;strong&gt;Use lazy logical operator&lt;/strong&gt;, as shown in Figure 29:&lt;/p&gt; &lt;div id="attachment_750857" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d49eb262.png"&gt;&lt;img aria-describedby="caption-attachment-750857" class="wp-image-750857" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d49eb262.png" alt="A screenshot of the option to use the lazy logical operator." width="640" height="601" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d49eb262.png 800w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d49eb262-300x282.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d49eb262-768x721.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750857" class="wp-caption-text"&gt;Figure 29: Open the Code Style tab and select &amp;#8216;Use lazy logical operator.&amp;#8221;&lt;/p&gt;&lt;/div&gt; &lt;p&gt;For the code in Figure 30:&lt;/p&gt; &lt;div id="attachment_750867" style="width: 583px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d600584e.png"&gt;&lt;img aria-describedby="caption-attachment-750867" class="wp-image-750867 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d600584e.png" alt="A screenshot of MyClass.java before cleanup." width="573" height="183" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d600584e.png 573w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d600584e-300x96.png 300w" sizes="(max-width: 573px) 100vw, 573px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750867" class="wp-caption-text"&gt;Figure 30: MyClass.java before cleanup.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;you would get the results shown in Figure 31, after the cleanup:&lt;/p&gt; &lt;div id="attachment_750877" style="width: 581px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d768fd4d.png"&gt;&lt;img aria-describedby="caption-attachment-750877" class="wp-image-750877 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d768fd4d.png" alt="A screenshot of MyClass.java after cleanup." width="571" height="183" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d768fd4d.png 571w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d768fd4d-300x96.png 300w" sizes="(max-width: 571px) 100vw, 571px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750877" class="wp-caption-text"&gt;Figure 31: MyClass.java after cleanup.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;A quick fix to switch expression&lt;/h4&gt; &lt;p&gt;We added a quick fix to convert a&lt;code&gt;switch&lt;/code&gt; expression&amp;#8217;s &lt;code&gt;return&lt;/code&gt; statement to a &lt;code&gt;yield&lt;/code&gt; statement, as shown in Figure 32:&lt;/p&gt; &lt;div id="attachment_750887" style="width: 424px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d949426d.png"&gt;&lt;img aria-describedby="caption-attachment-750887" class="wp-image-750887 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d949426d.png" alt="A screenshot of the option: &amp;#34;Change to 'yield' statement&amp;#34;." width="414" height="137" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d949426d.png 414w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d949426d-300x99.png 300w" sizes="(max-width: 414px) 100vw, 414px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750887" class="wp-caption-text"&gt;Figure 32: Convert a switch expression&amp;#8217;s &amp;#8216;return&amp;#8217; statement to a &amp;#8216;yield&amp;#8217; statement.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;The Java formatter&lt;/h3&gt; &lt;p&gt;The Java formatter has new settings that support record declarations. These settings are similar to existing settings related to other type declarations. To see them all, use the Filter field and type in the keyword &lt;code&gt;record&lt;/code&gt;, as shown in Figure 33:&lt;/p&gt; &lt;div id="attachment_750897" style="width: 440px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083dae5a648.png"&gt;&lt;img aria-describedby="caption-attachment-750897" class="wp-image-750897 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083dae5a648.png" alt="A screenshot of the new settings for record declarations." width="430" height="768" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083dae5a648.png 430w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083dae5a648-168x300.png 168w" sizes="(max-width: 430px) 100vw, 430px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750897" class="wp-caption-text"&gt;Figure 33: How to access the Java formatter&amp;#8217;s new settings for record declarations.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Debugging&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;JDT debugger&lt;/strong&gt; is now capable of inspecting synthetic variables that are generated by Java compilers. As an example, let&amp;#8217;s say that we needed to debug the method &lt;code&gt;java.util.stream.ReferencePipeline.filter(Predicate&amp;#60;? super P_OUT&amp;#62;)&lt;/code&gt; and inspect the predicate variable. Figure 34 shows the method before debugging:&lt;/p&gt; &lt;div id="attachment_750907" style="width: 521px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083dca71e21.png"&gt;&lt;img aria-describedby="caption-attachment-750907" class="wp-image-750907 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083dca71e21.png" alt="A screenshot of the debugger inspecting synthetic variables." width="511" height="335" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083dca71e21.png 511w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083dca71e21-300x197.png 300w" sizes="(max-width: 511px) 100vw, 511px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750907" class="wp-caption-text"&gt;Figure 34: The JDT debugger flags a synthetic variable.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Figure 35 shows the method after debugging:&lt;/p&gt; &lt;div id="attachment_750917" style="width: 514px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083de132228.png"&gt;&lt;img aria-describedby="caption-attachment-750917" class="wp-image-750917 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083de132228.png" alt="A screenshot of the corrected variable." width="504" height="302" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083de132228.png 504w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083de132228-300x180.png 300w" sizes="(max-width: 504px) 100vw, 504px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750917" class="wp-caption-text"&gt;Figure 35: The corrected variable.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Preferences&lt;/h3&gt; &lt;p&gt;We&amp;#8217;ve removed the &lt;strong&gt;Show Substring Matches&lt;/strong&gt; option from the JDT&amp;#8217;s content assist preference option. The feature is now enabled and always on by default. Use the VM property to disable it:&lt;/p&gt; &lt;pre&gt;-Djdt.codeCompleteSubstringMatch=false &lt;/pre&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;As you can see, we made a wide range of additions and improvements in JBoss Tools 4.16.0 and Red Hat CodeReady Studio 12.16 for Eclipse 4.16 (2020-06). This update includes a bit of something for everyone. You can find more noteworthy updates on &lt;a target="_blank" rel="nofollow" href="https://tools.jboss.org/documentation/whatsnew/jbosstools/4.16.0.Final.html"&gt;this page&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F21%2Fnew-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.16.0.GA%20and%20JBoss%20Tools%204.16.0.Final%20for%20Eclipse%202020-06" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F21%2Fnew-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.16.0.GA%20and%20JBoss%20Tools%204.16.0.Final%20for%20Eclipse%202020-06" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F21%2Fnew-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.16.0.GA%20and%20JBoss%20Tools%204.16.0.Final%20for%20Eclipse%202020-06" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F21%2Fnew-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.16.0.GA%20and%20JBoss%20Tools%204.16.0.Final%20for%20Eclipse%202020-06" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F21%2Fnew-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.16.0.GA%20and%20JBoss%20Tools%204.16.0.Final%20for%20Eclipse%202020-06" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F21%2Fnew-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.16.0.GA%20and%20JBoss%20Tools%204.16.0.Final%20for%20Eclipse%202020-06" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F21%2Fnew-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.16.0.GA%20and%20JBoss%20Tools%204.16.0.Final%20for%20Eclipse%202020-06" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F21%2Fnew-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06%2F&amp;#038;title=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.16.0.GA%20and%20JBoss%20Tools%204.16.0.Final%20for%20Eclipse%202020-06" data-a2a-url="https://developers.redhat.com/blog/2020/07/21/new-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06/" data-a2a-title="New features in Red Hat CodeReady Studio 12.16.0.GA and JBoss Tools 4.16.0.Final for Eclipse 2020-06"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/21/new-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06/"&gt;New features in Red Hat CodeReady Studio 12.16.0.GA and JBoss Tools 4.16.0.Final for Eclipse 2020-06&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/KDIbwUVsn-g" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;JBoss Tools 4.16.0 and Red Hat CodeReady Studio 12.16 for Eclipse 4.16 (2020-06) are now available. For this release, we focused on improving Quarkus&amp;#8211; and container-based development and fixing bugs. We also updated the Hibernate Tools runtime provider and Java Developer Tools (JDT) extensions, which are now compatible with Java 14. Additionally, we made many [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/21/new-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06/"&gt;New features in Red Hat CodeReady Studio 12.16.0.GA and JBoss Tools 4.16.0.Final for Eclipse 2020-06&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/07/21/new-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">750567</post-id><dc:creator>Jeff Maury</dc:creator><dc:date>2020-07-21T13:57:00Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/21/new-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06/</feedburner:origLink></entry><entry><title>JBoss Tools and Red Hat CodeReady Studio for Eclipse 2020-06</title><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ufT4g1fric0/12.16.0.ga.html" /><category term="release" /><category term="jbosstools" /><category term="devstudio" /><category term="jbosscentral" /><category term="codereadystudio" /><author><name>jeffmaury</name></author><id>https://tools.jboss.org/blog/12.16.0.ga.html</id><updated>2020-07-21T07:00:37Z</updated><published>2020-07-21T00:00:00Z</published><content type="html">&lt;div&gt;&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="https://tools.jboss.org/downloads/jbosstools/2020-06/4.16.0.Final.html"&gt;JBoss Tools 4.16.0&lt;/a&gt; and &lt;a href="https://tools.jboss.org/downloads/devstudio/2020-06/12.16.0.GA.html"&gt;Red Hat CodeReady Studio 12.16&lt;/a&gt; for Eclipse 2020-06 are here waiting for you. Check it out!&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/blog/images/crstudio12.png" alt="crstudio12" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="installation"&gt;&lt;a class="anchor" href="#installation"&gt;&lt;/a&gt;Installation&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Red Hat CodeReady Studio comes with everything pre-bundled in its installer. Simply download it from our &lt;a href="https://developers.redhat.com/products/codeready-studio/overview/"&gt;Red Hat CodeReady product page&lt;/a&gt; and run it like this:&lt;/p&gt; &lt;/div&gt; &lt;div class="literalblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;java -jar codereadystudio-&amp;lt;installername&amp;gt;.jar&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;JBoss Tools or Bring-Your-Own-Eclipse (BYOE) CodeReady Studio require a bit more:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release requires at least Eclipse 4.16 (2020-06) but we recommend using the latest &lt;a href="https://www.eclipse.org/downloads/packages/release/2020-06/r/eclipse-ide-enterprise-java-developers"&gt;Eclipse 4.16 2020-06 JEE Bundle&lt;/a&gt; since then you get most of the dependencies preinstalled.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under &amp;quot;JBoss Tools&amp;quot; or &amp;quot;Red Hat CodeReady Studio&amp;quot;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For JBoss Tools, you can also use our update site directly.&lt;/p&gt; &lt;/div&gt; &lt;div class="literalblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;http://download.jboss.org/jbosstools/photon/stable/updates/&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-is-new"&gt;&lt;a class="anchor" href="#what-is-new"&gt;&lt;/a&gt;What is new?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Our main focus for this release was a new tooling for the Quarkus framework, improvements for container based development and bug fixing. Eclipse 2020-06 itself has a lot of new cool stuff but let me highlight just a few updates in both Eclipse 2020-06 and JBoss Tools plugins that I think are worth mentioning.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="openshift"&gt;&lt;a class="anchor" href="#openshift"&gt;&lt;/a&gt;OpenShift&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="secure-url-support"&gt;&lt;a class="anchor" href="#secure-url-support"&gt;&lt;/a&gt;Secure URL support&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;It is now possible to create secured URLs in the Application Explorer View. If you select this option, the created URL will be accessible through &lt;code&gt;https&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/secure-url.png" alt="secure url" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When such an URL is displayed in the tree, the icon now has a secure lock indicator.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/secure-url1.png" alt="secure url1" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="openshift-container-platform-4-5-support"&gt;&lt;a class="anchor" href="#openshift-container-platform-4-5-support"&gt;&lt;/a&gt;OpenShift Container Platform 4.5 support&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;With the new OpenShift Container Platform (OCP) 4.5 now available, JBoss Tools is compatible with this major release in a transparent way. Just define your connection to your OCP 4.4 based cluster as you did before for an OCP 3 cluster, and use the tooling !&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="quarkus"&gt;&lt;a class="anchor" href="#quarkus"&gt;&lt;/a&gt;Quarkus&lt;/h3&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="server-tools"&gt;&lt;a class="anchor" href="#server-tools"&gt;&lt;/a&gt;Server Tools&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="wildfly-20-server-adapter"&gt;&lt;a class="anchor" href="#wildfly-20-server-adapter"&gt;&lt;/a&gt;Wildfly 20 Server Adapter&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A server adapter has been added to work with Wildfly 20. It adds support for Java EE 8, Jakarta EE 8 and Microprofile 3.3.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="hibernate-tools"&gt;&lt;a class="anchor" href="#hibernate-tools"&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="hibernate-runtime-provider-updates"&gt;&lt;a class="anchor" href="#hibernate-runtime-provider-updates"&gt;&lt;/a&gt;Hibernate Runtime Provider Updates&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime providers.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="runtime-provider-updates"&gt;&lt;a class="anchor" href="#runtime-provider-updates"&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.17.Final and Hibernate Tools version 5.4.17.Final.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.17.Final and Hibernate Tools version 5.3.17.Final.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="platform"&gt;&lt;a class="anchor" href="#platform"&gt;&lt;/a&gt;Platform&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="views-dialogs-and-toolbar"&gt;&lt;a class="anchor" href="#views-dialogs-and-toolbar"&gt;&lt;/a&gt;Views, Dialogs and Toolbar&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="create-missing-folders-from-the-new-file-wizard"&gt;&lt;a class="anchor" href="#create-missing-folders-from-the-new-file-wizard"&gt;&lt;/a&gt;Create missing folders from the New File wizard&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can now create missing folders directly via the New File wizard, without explicitly creating folders beforehand.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/file-and-folder.png" alt="file and folder" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="text-editors"&gt;&lt;a class="anchor" href="#text-editors"&gt;&lt;/a&gt;Text Editors&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="support-for-ligatures-on-windows"&gt;&lt;a class="anchor" href="#support-for-ligatures-on-windows"&gt;&lt;/a&gt;Support for ligatures on Windows&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Eclipse now supports font ligatures on Windows. It was already supported on Linux and macOS. You can specify the font with ligatures to be used by the &lt;strong&gt;Text editors&lt;/strong&gt; using the preference:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;strong&gt;General &amp;gt; Appearance &amp;gt; Colors and Font &amp;gt; Basic &amp;gt; Text Font&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Screenshot of ligatures rendered in the Java Editor on Windows 10:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/eclipse_ligatures_support_win.png" alt="eclipse ligatures support win" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="themes-and-styling"&gt;&lt;a class="anchor" href="#themes-and-styling"&gt;&lt;/a&gt;Themes and Styling&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="native-dark-scrollbars-in-windows-dark-theme"&gt;&lt;a class="anchor" href="#native-dark-scrollbars-in-windows-dark-theme"&gt;&lt;/a&gt;Native dark scrollbars in Windows dark theme&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Eclipse dark theme now uses the native dark scrollbars and retired the software solution for the editor area.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/dark-theme-scrollbars.png" alt="dark theme scrollbars" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="eclipse-toolbar-s-styling-on-windows-aligned-with-win-10"&gt;&lt;a class="anchor" href="#eclipse-toolbar-s-styling-on-windows-aligned-with-win-10"&gt;&lt;/a&gt;Eclipse toolbar’s styling on Windows aligned with Win 10&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The default Eclipse light theme has been updated to align better with the Windows 10 default theme.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Old:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/old-light-theme.png" alt="old light theme" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;New:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/new-light-theme.png" alt="new light theme" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="square-tabs-for-views"&gt;&lt;a class="anchor" href="#square-tabs-for-views"&gt;&lt;/a&gt;Square tabs for views&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Square tabs are now used by default for the views in the Eclipse IDE.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/dark_theme_square_tabs.png" alt="dark theme square tabs" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In order to switch back to using round tabs, a preference has been added.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/round_tabs_preference_option.png" alt="round tabs preference option" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="consistent-toolbar-colors-in-dark-theme"&gt;&lt;a class="anchor" href="#consistent-toolbar-colors-in-dark-theme"&gt;&lt;/a&gt;Consistent toolbar colors in dark theme&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The toolbar styling in the dark theme is now consistent.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/dark-theme-toolbar.png" alt="dark theme toolbar" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="preferences"&gt;&lt;a class="anchor" href="#preferences"&gt;&lt;/a&gt;Preferences&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="verify-installation-operations-against-current-jre"&gt;&lt;a class="anchor" href="#verify-installation-operations-against-current-jre"&gt;&lt;/a&gt;Verify installation operations against current JRE&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new option (on by default) is available in the &lt;strong&gt;Install/Update&lt;/strong&gt; preference page: &lt;em&gt;Verify provisioning operation is compatible with current running JRE&lt;/em&gt;. This enables some extra check when installing, updating or uninstalling content using the standard dialogs so the operation will fail with a useful message if the units you’re installing require a newer or incompatible Java runtime than the one that’s currently in use to run the IDE.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/incompatibleJREPref.png" alt="incompatibleJREPref" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Here is how the error message looks like, for example when you’re trying to install a unit that requires Java 14 and you’re running the Eclipse IDE with an older Java version:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/incompatibleJREMessage.png" alt="incompatibleJREMessage" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="preference-to-inline-rename-resource"&gt;&lt;a class="anchor" href="#preference-to-inline-rename-resource"&gt;&lt;/a&gt;Preference to inline rename resource&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The preference to rename resource inline or using dialog was added in 4.15 as a radio button and has now been changed to a check box.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/inlineRenameResource.png" alt="inlineRenameResource" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="debug"&gt;&lt;a class="anchor" href="#debug"&gt;&lt;/a&gt;Debug&lt;/h4&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="select-all-and-deselect-all-for-import-breakpoints-wizard"&gt;&lt;a class="anchor" href="#select-all-and-deselect-all-for-import-breakpoints-wizard"&gt;&lt;/a&gt;&amp;apos;Select All&amp;apos; and &amp;apos;Deselect All&amp;apos; for Import breakpoints wizard&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can now use &lt;strong&gt;Select All&lt;/strong&gt; or &lt;strong&gt;Deselect All&lt;/strong&gt; buttons to select or deselect all the breakpoint markers during import of breakpoints.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/import-selectall.png" alt="import selectall" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="general-updates"&gt;&lt;a class="anchor" href="#general-updates"&gt;&lt;/a&gt;General Updates&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="show-key-bindings-when-command-is-invoked"&gt;&lt;a class="anchor" href="#show-key-bindings-when-command-is-invoked"&gt;&lt;/a&gt;Show key bindings when command is invoked&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For presentations, screen casts and learning purposes, it is very helpful to show the corresponding key binding when a command is invoked. This was added some releases ago.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/show_keybindings.png" alt="show keybindings" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;It is now possible to enable this feature separately for keyboard interaction and mouse clicks. So you can enable it for mouse clicks only, for keyboard interaction only or for both. Enabling this only for mouse clicks is very helpful for users who want to learn existing key bindings.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can enable this on the &lt;strong&gt;Preferences&lt;/strong&gt; dialog via the &lt;em&gt;Show key binding when command is invoked&lt;/em&gt; group on the &lt;strong&gt;General &amp;gt; Keys&lt;/strong&gt; preference page. To change this setting quickly the command &amp;apos;Toggle Show Key Bindings&amp;apos; can be used (e.g. via the find actions dialog).&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/show_keybindings_pref.png" alt="show keybindings pref" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="ant-1-10-8"&gt;&lt;a class="anchor" href="#ant-1-10-8"&gt;&lt;/a&gt;Ant 1.10.8&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Eclipse has adopted Ant version 1.10.8.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="java-developement-tools-jdt"&gt;&lt;a class="anchor" href="#java-developement-tools-jdt"&gt;&lt;/a&gt;Java Developement Tools (JDT)&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-14-support"&gt;&lt;a class="anchor" href="#java-14-support"&gt;&lt;/a&gt;Java 14 Support&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="java-14"&gt;&lt;a class="anchor" href="#java-14"&gt;&lt;/a&gt;Java 14&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Java™ 14 is available and Eclipse JDT supports Java 14 for the Eclipse 4.16 release.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The release notably includes the following Java 14 features:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;JEP 361: Switch Expressions (Standard).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;JEP 359: Records (Preview).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;JEP 368: Text Blocks (Second Preview).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;JEP 305: Pattern Matching for Instanceof (Preview).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please note that preview option should be on for preview language features. For an informal introduction of the support, please refer to &lt;a href="https://wiki.eclipse.org/Java14/Examples"&gt;Java 14 Examples wiki&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="set-jdk-compliance-to-14"&gt;&lt;a class="anchor" href="#set-jdk-compliance-to-14"&gt;&lt;/a&gt;Set JDK Compliance to 14&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can set the JDK compliance to 14 and enable the preview features in &lt;strong&gt;Preferences &amp;gt; Java &amp;gt; Compiler&lt;/strong&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/jdk-compliance-14.png" alt="jdk compliance 14" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="template-to-create-new-record"&gt;&lt;a class="anchor" href="#template-to-create-new-record"&gt;&lt;/a&gt;Template to create new record&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can use the &lt;code&gt;new_record&lt;/code&gt; template to create a record in an empty &lt;code&gt;.java&lt;/code&gt; file:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/newrecord.png" alt="newrecord" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="record-creation-wizard"&gt;&lt;a class="anchor" href="#record-creation-wizard"&gt;&lt;/a&gt;Record Creation Wizard&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can create a new record using the Record creation wizard that can be opened by:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Right Click on the &lt;strong&gt;Project &amp;gt; New &amp;gt; Record&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Right Click on the &lt;strong&gt;Project &amp;gt; New &amp;gt; Other and search for Record&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Right Click on the &lt;strong&gt;Project &amp;gt; New &amp;gt; Other &amp;gt; Java &amp;gt; Record&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Record creation wizard comes up as shown below.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/fileAddJ14RecordCreation.png" alt="fileAddJ14RecordCreation" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;em&gt;Note: In older workspaces the &amp;quot;Record&amp;quot; entry may not appear directly under the &amp;quot;New&amp;quot; menu in the Java perspective. To resolve this, either use a new workspace or launch eclipse with the option &lt;code&gt;-clearPersistedState&lt;/code&gt; for your existing workspace.&lt;/em&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="enable-preview-features"&gt;&lt;a class="anchor" href="#enable-preview-features"&gt;&lt;/a&gt;Enable preview features&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can now quickly enable the preview features on an applicable Java project by right-clicking on it and selecting &lt;strong&gt;Configure &amp;gt; Enable preview features&lt;/strong&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/enable-preview.png" alt="enable preview" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can also change the default severity (warning) of the preview features compile problem in the opened &lt;strong&gt;Project properties&lt;/strong&gt; dialog:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/preview-severity.png" alt="preview severity" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-editor"&gt;&lt;a class="anchor" href="#java-editor"&gt;&lt;/a&gt;Java Editor&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="non-blocking-java-code-completion"&gt;&lt;a class="anchor" href="#non-blocking-java-code-completion"&gt;&lt;/a&gt;Non-blocking Java code completion&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;By default, code completions in the &lt;strong&gt;Java editor&lt;/strong&gt; are now configured to be computed (when possible) in a separate non-UI thread in order to prevent UI freezes in case of long computations.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Users can restore the legacy behavior in &lt;strong&gt;Preferences &amp;gt; Java &amp;gt; Editor &amp;gt; Content Assist &amp;gt; Advanced&lt;/strong&gt; by unchecking the enable non-blocking completion checkbox; integrators can change the value of the &lt;code&gt;org.eclipse.jdt.ui.content_assist_noUIThread_computation&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/jdtNonBlockingCompletionPref.png" alt="jdtNonBlockingCompletionPref" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="merge-control-workflows"&gt;&lt;a class="anchor" href="#merge-control-workflows"&gt;&lt;/a&gt;Merge control workflows&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new clean up has been added that merges conditions of if/else if/else that have the same blocks when it is possible.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The code in the blocks should be the same. An else block may be different and won’t be merged. One condition may be made opposite to allow the merge. The conditions are merged with &lt;code&gt;||&lt;/code&gt; to keep the control workflow the same. Parenthesis is added to avoid priority issue. Most of the brackets, formatting and comments are kept.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To select the clean up, invoke &lt;strong&gt;Source &amp;gt; Clean Up…​&lt;/strong&gt;, use a custom profile, and on the &lt;strong&gt;Configure…​&lt;/strong&gt; dialog select &lt;strong&gt;Merge conditions of if/else if/else that have the same blocks&lt;/strong&gt; on the &lt;strong&gt;Unnecessary Code&lt;/strong&gt; tab.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/merge-control-workflows-preferences.png" alt="merge control workflows preferences" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For the given code:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/merge-control-workflows-before.png" alt="merge control workflows before" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You get this after the clean up:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/merge-control-workflows-after.png" alt="merge control workflows after" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="local-variable-type-inference"&gt;&lt;a class="anchor" href="#local-variable-type-inference"&gt;&lt;/a&gt;Local variable type inference&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new clean up has been added that makes use of the &lt;code&gt;var&lt;/code&gt; keyword for the local variable when it is possible and is enabled only for Java 10 and higher.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The clean up replaces the explicit variable type by &lt;code&gt;var&lt;/code&gt; when this type can be known by the variable initialization. It also replaces the diamond operator in instance creation by a parameterized type. Eventually, it adds a suffix to initialization number literal to match the variable type. In any case, the variable type is still exactly the same.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To select the clean up, invoke &lt;strong&gt;Source &amp;gt; Clean Up…​&lt;/strong&gt;, use a custom profile, and on the &lt;strong&gt;Configure…​&lt;/strong&gt; dialog select &lt;strong&gt;Use the local variable type inference&lt;/strong&gt; on the &lt;strong&gt;Code Style&lt;/strong&gt; tab.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/var-preferences.png" alt="var preferences" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For the given code:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/var-before.png" alt="var before" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You get this after the clean up:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/var-after.png" alt="var after" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="prefer-lazy-logical-operators"&gt;&lt;a class="anchor" href="#prefer-lazy-logical-operators"&gt;&lt;/a&gt;Prefer lazy logical operators&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new clean up has been added that replaces eager logical operators by lazy operators when it is possible.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The clean up respectively replaces &lt;code&gt;|&lt;/code&gt; and &amp;amp; by &lt;code&gt;||&lt;/code&gt; and &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; when the following operands can’t make side effect. Any assignments, increments, decrements, object creations or method call may cause side effect. So, in such case, it will keep the eager operator. It also leaves the binary operations as it is.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To select the clean up, invoke &lt;strong&gt;Source &amp;gt; Clean Up…​&lt;/strong&gt;, use a custom profile, and on the &lt;strong&gt;Configure…​&lt;/strong&gt; dialog select &lt;strong&gt;Use the lazy logical operator&lt;/strong&gt; on the &lt;strong&gt;Code Style&lt;/strong&gt; tab.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/lazy-logical-preferences.png" alt="lazy logical preferences" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For the given code:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/lazy-logical-before.png" alt="lazy logical before" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You get this after the clean up:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/lazy-logical-after.png" alt="lazy logical after" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="quick-fix-to-change-return-statement-to-yield-statement-in-switch-expression"&gt;&lt;a class="anchor" href="#quick-fix-to-change-return-statement-to-yield-statement-in-switch-expression"&gt;&lt;/a&gt;Quick fix to change return statement to yield statement in Switch Expression&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A quick fix has been added to convert a &lt;code&gt;return&lt;/code&gt; statement in a &lt;code&gt;Switch Expression&lt;/code&gt; to &lt;code&gt;yield&lt;/code&gt; statement.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/quickfix-switch-expression-return-to-yield.png" alt="quickfix switch expression return to yield" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-formatter"&gt;&lt;a class="anchor" href="#java-formatter"&gt;&lt;/a&gt;Java Formatter&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="record-declarations-support"&gt;&lt;a class="anchor" href="#record-declarations-support"&gt;&lt;/a&gt;Record declarations support&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A lot of new settings have appeared in the formatter profile to control the formatting of &lt;strong&gt;record declarations&lt;/strong&gt;. They are very similar to existing settings related to other type declarations. To see them all, you can use the filter field and type in the keyword &lt;code&gt;record&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/formatter-records.png" alt="formatter records" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="debug-2"&gt;&lt;a class="anchor" href="#debug-2"&gt;&lt;/a&gt;Debug&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="synthetic-variables-inspection"&gt;&lt;a class="anchor" href="#synthetic-variables-inspection"&gt;&lt;/a&gt;Synthetic variables inspection&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;strong&gt;JDT debugger&lt;/strong&gt; is now capable of inspecting synthetic variables which are generated by the Java compilers. One such example is debugging the following method ` java.util.stream.ReferencePipeline.filter(Predicate&amp;lt;? super P_OUT&amp;gt;)` and inspecting the predicate variable.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Before:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/synthetic_var_without_fix.png" alt="synthetic var without fix" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Now:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/synthetic_var_with_fix.png" alt="synthetic var with fix" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="preferences-2"&gt;&lt;a class="anchor" href="#preferences-2"&gt;&lt;/a&gt;Preferences&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="substring-matching"&gt;&lt;a class="anchor" href="#substring-matching"&gt;&lt;/a&gt;Substring Matching&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The content assist preference option &lt;strong&gt;Show Substring Matches&lt;/strong&gt; has been removed and the feature is now always enabled.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Any application or user can still disable it using the VM property: &lt;strong&gt;-Djdt.codeCompleteSubstringMatch=false&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="and-more"&gt;&lt;a class="anchor" href="#and-more"&gt;&lt;/a&gt;And more…​&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can find more noteworthy updates in on &lt;a href="https://tools.jboss.org/documentation/whatsnew/jbosstools/4.16.0.Final.html"&gt;this page&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-is-next"&gt;&lt;a class="anchor" href="#what-is-next"&gt;&lt;/a&gt;What is next?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Having JBoss Tools 4.16.0 and Red Hat CodeReady Studio 12.16 out we are already working on the next release for Eclipse 2020-09.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Enjoy!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Jeff Maury&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ufT4g1fric0" height="1" width="1" alt=""/&gt;</content><summary>JBoss Tools 4.16.0 and Red Hat CodeReady Studio 12.16 for Eclipse 2020-06 are here waiting for you. Check it out! Installation Red Hat CodeReady Studio comes with everything pre-bundled in its installer. Simply download it from our Red Hat CodeReady product page and run it like this: java -jar codereadystudio-&lt;installername&gt;.jar JBoss Tools or Bring-Your-Own-Eclipse (BYOE) CodeReady Studio require a bit more: This release requires at least Eclipse 4.16 (2020-06) but we recommend using the latest Eclipse 4.16 2020-06 JEE Bundle since then you get most of the dependencies preinstalled. Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under "JBoss Tools" or "Red Hat CodeReady...</summary><dc:creator>jeffmaury</dc:creator><dc:date>2020-07-21T00:00:00Z</dc:date><feedburner:origLink>https://tools.jboss.org/blog/12.16.0.ga.html</feedburner:origLink></entry><entry><title>Byteman 4.0.12 has been released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/tHlJPPzshKo/byteman-4012-has-been-released.html" /><category term="feed_group_name_byteman" scheme="searchisko:content:tags" /><category term="feed_name_byteman" scheme="searchisko:content:tags" /><author><name>Andrew Dinn</name></author><id>searchisko:content:id:jbossorg_blog-byteman_4_0_12_has_been_released</id><updated>2020-07-20T14:31:00Z</updated><published>2020-07-20T14:31:00Z</published><content type="html">Byteman 4.0.12 is now available from the &lt;a href="http://www.jboss.org/byteman/downloads"&gt;Byteman downloads page&lt;/a&gt; and from the &lt;a href="https://oss.sonatype.org/index.html#nexus-search;quick%7Ebyteman"&gt;Maven Central repository&lt;/a&gt;. It is the latest update release for use on all JDK9+ runtimes. It is also recommended as the preferred release for use on JDK8- runtimes.&lt;br /&gt;&lt;br /&gt;Byteman 4.0.12 is a maintenance release which fixes a small bug using AT NEW rule locations. More details are provided in the &lt;a href="http://downloads.jboss.org/byteman/latest/ReleaseNotes.txt"&gt;Release Notes&lt;/a&gt;.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/tHlJPPzshKo" height="1" width="1" alt=""/&gt;</content><summary>Byteman 4.0.12 is now available from the Byteman downloads page and from the Maven Central repository. It is the latest update release for use on all JDK9+ runtimes. It is also recommended as the preferred release for use on JDK8- runtimes. Byteman 4.0.12 is a maintenance release which fixes a small bug using AT NEW rule locations. More details are provided in the Release Notes.</summary><dc:creator>Andrew Dinn</dc:creator><dc:date>2020-07-20T14:31:00Z</dc:date><feedburner:origLink>http://bytemanblog.blogspot.com/2020/07/byteman-4012-has-been-released.html</feedburner:origLink></entry><entry><title>Advanced Helm support in the OpenShift 4.5 web console</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/N5casGC3S7k/" /><category term="Kubernetes" /><author><name>Serena Chechile Nichols</name></author><id>https://developers.redhat.com/blog/?p=754407</id><updated>2020-07-20T07:00:36Z</updated><published>2020-07-20T07:00:36Z</published><content type="html">&lt;p&gt;Helm is a popular package manager for &lt;a href="https://developers.redhat.com/topics/kubernetes"&gt;Kubernetes&lt;/a&gt; that is fully supported on &lt;a href="https://developers.redhat.com/products/openshift/getting-started"&gt;Red Hat OpenShift&lt;/a&gt;. Starting with &lt;a target="_blank" rel="nofollow" href="http://www.openshift.com/try"&gt;OpenShift 4.5&lt;/a&gt;, we&amp;#8217;ve made working with Helm charts in the OpenShift web console more intuitive than ever. In this article, we introduce the new features for accessing and managing Helm charts.&lt;/p&gt; &lt;h2&gt;Helm charts in the OpenShift console&lt;/h2&gt; &lt;p&gt;Whenever you install a new Helm chart, a Helm release is created in your project namespace. You can then manage each chart directly from the OpenShift web console, including upgrading and uninstalling existing charts. You can also access release notes for any installed Helm chart from the OpenShift console, and you can control the complete Helm chart&amp;#8217;s lifecycle from the console. You can even control the lifecycle of charts that you already installed using Helm&amp;#8217;s command line interface (CLI) or from an external Helm chart repository.&lt;/p&gt; &lt;p&gt;OpenShift 4.5 also adds new console features to manage and control Helm chart releases and revisions. The demonstration in Figure 1 is an overview of all of the new features for managing Helm charts in the OpenShift 4.5 console.&lt;/p&gt; &lt;div id="attachment_754907" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-HelmReleases-01.gif"&gt;&lt;img aria-describedby="caption-attachment-754907" class="wp-image-754907 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/rh-openshift4-5-helm.gif" alt="A demonstration of features for accessing and managing Helm charts in the OpenShift 4.5 web console." width="640" height="318" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-754907" class="wp-caption-text"&gt;Figure 1: New Helm features available in the OpenShift 4.5 web console.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Let&amp;#8217;s look closer at these new features!&lt;/p&gt; &lt;h3&gt;Release notes&lt;/h3&gt; &lt;p&gt;Release notes provide detailed information about how to use an installed Helm chart. This information is instantly available to you after you install a new chart. As shown in Figure 2, you can access any Helm chart&amp;#8217;s release notes from the new Topology view in OpenShift 4.5.  You can also access release notes by using a tab on the Helm Release Details page, as shown in Figure 2.&lt;/p&gt; &lt;div id="attachment_754507" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-HelmReleases-02-1.png"&gt;&lt;img aria-describedby="caption-attachment-754507" class="wp-image-754507 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-HelmReleases-02-1-1024x501.png" alt="A screenshot of the Topology view showing release notes for a Helm chart." width="640" height="313" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-HelmReleases-02-1-1024x501.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-HelmReleases-02-1-300x147.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-HelmReleases-02-1-768x375.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-754507" class="wp-caption-text"&gt;Figure 2: Access any Helm chart&amp;#8217;s release notes using a tab in the Topology view.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Upgrading a Helm release&lt;/h3&gt; &lt;p&gt;You can upgrade an existing Helm release by updating to a new version of the Helm chart or by modifying the values provided to the chart. Upgrading a Helm release lets OpenShift update any applications that are deployed by that release directly from the console. Figure 3 shows the options to select a new chart version or update the YAML file for an existing Helm release.&lt;/p&gt; &lt;div id="attachment_754497" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-HelmReleases-03-1.png"&gt;&lt;img aria-describedby="caption-attachment-754497" class="wp-image-754497 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-HelmReleases-03-1-1024x504.png" alt="A screenshot of the options to upload a new file or update the existing YAML file." width="640" height="315" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-HelmReleases-03-1-1024x504.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-HelmReleases-03-1-300x148.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-HelmReleases-03-1-768x378.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-754497" class="wp-caption-text"&gt;Figure 3: Options for upgrading a Helm release.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Rolling back a Helm deployment&lt;/h3&gt; &lt;p&gt;Rolling back a previous Helm deployment has never been easier than it is in the OpenShift 4.5 console. From the Revision History list, you can select any previous Helm deployment and revert to it in one click. Figure 4 shows the Rollback Helm Release page and the Revision History list in the OpenShift 4.5 console.&lt;/p&gt; &lt;div id="attachment_754487" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-HelmReleases-04-1.png"&gt;&lt;img aria-describedby="caption-attachment-754487" class="wp-image-754487 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-HelmReleases-04-1-1024x467.png" alt="A screenshot of the Rollback Helm Release page and the Revision History list in the OpenShift 4.5 console." width="640" height="292" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-HelmReleases-04-1-1024x467.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-HelmReleases-04-1-300x137.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-HelmReleases-04-1-768x351.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-754487" class="wp-caption-text"&gt;Figure 4: Select a previously deployed Helm release, then click the Rollback button.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;OpenShift 4.5 improves the developer experience of using Helm and Helm charts. It gives great support to developers with full control and intuitive integration inside of the OpenShift web console, and it&amp;#8217;s easy to install Helm using the OpenShift developer catalog or the Helm CLI. Once you have Helm installed, you can upgrade and rollback Helm charts from external repositories, as well as work in your local development environment to create and test new charts.&lt;/p&gt; &lt;h2&gt;Give us your feedback!&lt;/h2&gt; &lt;p&gt;A huge part of the OpenShift developer experience process is receiving feedback and collaborating with our community and customers. We&amp;#8217;d love to hear from you. We hope you will share your thoughts on the &lt;a target="_blank" rel="nofollow" href="https://forms.gle/zDd4tuWvjndCRVMD8"&gt;OpenShift 4.5 Developer Experience feedback page&lt;/a&gt;. You can also join our &lt;a target="_blank" rel="nofollow" href="https://groups.google.com/forum/#!forum/openshift-dev-users"&gt;OpenShift Developer Experience Google Group&lt;/a&gt; to participate in discussions and learn about our Office Hours sessions, where you can collaborate with us and provide feedback about your experience using the OpenShift web console.&lt;/p&gt; &lt;h2&gt;Get started with OpenShift 4.5&lt;/h2&gt; &lt;p&gt;Are you ready to get started with the new OpenShift 4.5 web console? &lt;a target="_blank" rel="nofollow" href="http://www.openshift.com/try"&gt;Try OpenShift 4.5 today&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F20%2Fadvanced-helm-support-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Advanced%20Helm%20support%20in%20the%20OpenShift%204.5%20web%20console" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F20%2Fadvanced-helm-support-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Advanced%20Helm%20support%20in%20the%20OpenShift%204.5%20web%20console" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F20%2Fadvanced-helm-support-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Advanced%20Helm%20support%20in%20the%20OpenShift%204.5%20web%20console" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F20%2Fadvanced-helm-support-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Advanced%20Helm%20support%20in%20the%20OpenShift%204.5%20web%20console" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F20%2Fadvanced-helm-support-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Advanced%20Helm%20support%20in%20the%20OpenShift%204.5%20web%20console" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F20%2Fadvanced-helm-support-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Advanced%20Helm%20support%20in%20the%20OpenShift%204.5%20web%20console" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F20%2Fadvanced-helm-support-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Advanced%20Helm%20support%20in%20the%20OpenShift%204.5%20web%20console" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F20%2Fadvanced-helm-support-in-the-openshift-4-5-web-console%2F&amp;#038;title=Advanced%20Helm%20support%20in%20the%20OpenShift%204.5%20web%20console" data-a2a-url="https://developers.redhat.com/blog/2020/07/20/advanced-helm-support-in-the-openshift-4-5-web-console/" data-a2a-title="Advanced Helm support in the OpenShift 4.5 web console"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/20/advanced-helm-support-in-the-openshift-4-5-web-console/"&gt;Advanced Helm support in the OpenShift 4.5 web console&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/N5casGC3S7k" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Helm is a popular package manager for Kubernetes that is fully supported on Red Hat OpenShift. Starting with OpenShift 4.5, we&amp;#8217;ve made working with Helm charts in the OpenShift web console more intuitive than ever. In this article, we introduce the new features for accessing and managing Helm charts. Helm charts in the OpenShift console [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/20/advanced-helm-support-in-the-openshift-4-5-web-console/"&gt;Advanced Helm support in the OpenShift 4.5 web console&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/07/20/advanced-helm-support-in-the-openshift-4-5-web-console/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">754407</post-id><dc:creator>Serena Chechile Nichols</dc:creator><dc:date>2020-07-20T07:00:36Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/20/advanced-helm-support-in-the-openshift-4-5-web-console/</feedburner:origLink></entry><entry><title>Best practices: Using health checks in the OpenShift 4.5 web console</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/hsqWAXq1Jdw/" /><category term="Containers" /><category term="DevOps" /><category term="Kubernetes" /><category term="Kubernetes developer" /><category term="liveness probe" /><category term="OpenShift 4.5" /><category term="readiness probe" /><author><name>Serena Chechile Nichols</name></author><id>https://developers.redhat.com/blog/?p=751187</id><updated>2020-07-20T07:00:13Z</updated><published>2020-07-20T07:00:13Z</published><content type="html">&lt;p&gt;For an enterprise application to succeed, you need many moving parts to work correctly. If one piece breaks, the system must be able to detect the issue and operate without that component until it is repaired. Ideally, all of this should happen automatically. In this article, you will learn how to use health checks to improve application reliability and uptime in &lt;a href="https://developers.redhat.com/products/openshift/getting-started"&gt;Red Hat OpenShift 4.5&lt;/a&gt;. If you want to learn more about what&amp;#8217;s new and updated in OpenShift 4.5, read &lt;a href="https://developers.redhat.com/blog/2020/07/13/whats-new-in-the-openshift-4-5-console-developer-experience/"&gt;&lt;em&gt;What’s new in the OpenShift 4.5 console developer experience&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Health checks&lt;/h2&gt; &lt;p&gt;You can use health checks to automatically determine if your application is working. If an instance of your application isn&amp;#8217;t working, other services should stop accessing it and sending it requests. You will need to re-route those requests to another instance of the app or have them re-tried at a later time. The system should also bring the application back up to a healthy state. OpenShift already restarts pods when they crash, but adding health checks can make your deployments more robust.&lt;/p&gt; &lt;p&gt;OpenShift 4.5 offers three types of health checks to support application reliability and uptime: readiness probes, liveness probes, and startup probes.&lt;/p&gt; &lt;h3&gt;Readiness probes&lt;/h3&gt; &lt;p&gt;A readiness probe checks whether the container is ready to handle requests. Adding a readiness probe lets you know when a pod is ready to start accepting traffic. A pod is considered ready when all of its containers are ready. One way to use this signal is to control which pods are used as service back ends. When a pod is not ready, it is removed from the service&amp;#8217;s load balancers. The system stops sending traffic to the pod until it passes the readiness probe. A failed readiness probe means that a container should not receive any traffic from a proxy, even if it is running.&lt;/p&gt; &lt;h3&gt;Liveness probes&lt;/h3&gt; &lt;p&gt;A liveness probe checks whether the container is still running. Adding a liveness probes lets you know when to restart a container. For example, a liveness probe could catch a deadlock, where an application is running, but unable to make progress. Restarting a container in such a state can help to make the application more available despite bugs. If the liveness probe fails, the container is killed.&lt;/p&gt; &lt;h3&gt;Startup probes&lt;/h3&gt; &lt;p&gt;A startup probe checks whether the application within the container has started. The system will disable the liveness and readiness checks until the startup probe succeeds. Running the startup probe first ensures that the liveness and readiness probes don&amp;#8217;t interfere with the application startup. You can also set a startup probe to adopt liveness checks on slow-starting containers, which will help avoid your container being killed by the &lt;a href="https://developers.redhat.com/devnation/tech-talks/kubelet-no-masters"&gt;Kubelet&lt;/a&gt; before it is running. If the startup probe fails, then the container is killed.&lt;/p&gt; &lt;h2&gt;Probe types&lt;/h2&gt; &lt;p&gt;In addition to the three types of health checks, there are three types of probes. They are HTTP, command, and TCP:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The &lt;b&gt;HTTP probe&lt;/b&gt; is the most common type of custom liveness probe. The probe pings a path. If it gets an HTTP response in the 200 or 300 range, it marks the app as healthy. Otherwise, it marks the app as unhealthy.&lt;/li&gt; &lt;li&gt;The &lt;b&gt;command probe&lt;/b&gt; runs a command inside your container. If the command returns with exit code 0, then the probe marks the container as healthy. Otherwise, it marks it as unhealthy.&lt;/li&gt; &lt;li&gt;The &lt;b&gt;TCP probe&lt;/b&gt; attempts a TCP connection on a specified port. If the connection is successful, the container is considered healthy; if the connection fails, it is considered unhealthy. TCP probes could come in handy for an FTP service.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Using health checks in the web console&lt;/h2&gt; &lt;p&gt;Application health checks were available in the OpenShift 3 web console, and we&amp;#8217;ve received many requests to bring them back. In OpenShift 4.5, health checks are once again available for developers. You can add health checks using the &lt;b&gt;Advanced Options&lt;/b&gt; screen when you create new applications or services, or you can add or edit them afterward. If you have not yet configured health checks, you will see a notification in the side panel of the &lt;a href="https://developers.redhat.com/blog/2020/07/13/improved-navigation-in-the-openshift-4-5-developer-perspective/"&gt;new Topology view&lt;/a&gt;. This navigation makes it easy to discover health checks, and it includes a quick link for remediation.&lt;/p&gt; &lt;h3&gt;Default settings&lt;/h3&gt; &lt;p&gt;Adding health checks should be easy, so we&amp;#8217;ve used consistent patterns and flows, and provided defaults for ease of use. Three user flows are available for health checks. Regardless of the flow you choose, you can add any (or all) of the three health checks. There are also default settings for the three probe types, so you can easily add these, as well. Here is an example of a default setting for the HTTP probe type:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Probe type: HTTP&lt;/li&gt; &lt;li&gt;Port: 8080&lt;/li&gt; &lt;li&gt;Failure threshold: Three times, indicating the number of times the probe will try starting or restarting before giving up.&lt;/li&gt; &lt;li&gt;Success threshold: One time, indicating the number of consecutive successes for the probe to be considered successful after having failed.&lt;/li&gt; &lt;li&gt;Period: 10 seconds, indicating how often to perform the probe.&lt;/li&gt; &lt;li&gt;Timeout: One second.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Adding health checks&lt;/h2&gt; &lt;p&gt;You can add health checks when you create a new application or services, or you can add them later. You can also edit health checks after you&amp;#8217;ve created them.&lt;/p&gt; &lt;h3&gt;Adding health checks via Advanced Options&lt;/h3&gt; &lt;p&gt;You can use the Advanced Options screen to add health checks when you are importing source code from Git, deploying an image, or importing from a Dockerfile. Figure 1 shows the flow of adding health checks on the Advanced Options screen.&lt;/p&gt; &lt;div id="attachment_752977" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/4.5-HealthChecks-AdvOptions-01-reesized.gif"&gt;&lt;img aria-describedby="caption-attachment-752977" class="wp-image-752977" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/4.5-HealthChecks-AdvOptions-01-reesized.gif" alt="A screenshot of the Advanced Options screen." width="640" height="322" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-752977" class="wp-caption-text"&gt;Figure 1: Using the Advanced Options screen to add health checks.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Adding health checks in context&lt;/h3&gt; &lt;p&gt;There&amp;#8217;s no need to worry about forgetting to add health checks when you create a new application or service. When you select an object in the new Topology view, the side panel will reveal a health check notification, stating that health checks haven&amp;#8217;t been configured. You can then add health checks using either the link in the notification or the in-context menus. Figure 2 shows the screen for adding a health check via an in-context menu.&lt;/p&gt; &lt;div id="attachment_751237" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/4.5-HealthChecks-InContext-02.png"&gt;&lt;img aria-describedby="caption-attachment-751237" class="wp-image-751237 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/4.5-HealthChecks-InContext-02-1024x516.png" alt="A screenshot of the Topology view showing options to add a health check in the application context." width="640" height="323" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/4.5-HealthChecks-InContext-02-1024x516.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/4.5-HealthChecks-InContext-02-300x151.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/4.5-HealthChecks-InContext-02-768x387.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-751237" class="wp-caption-text"&gt;Figure 2: Adding health checks in context.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Editing health checks&lt;/h3&gt; &lt;p&gt;For workloads that have health checks already configured, we&amp;#8217;ve added an &lt;b&gt;Edit Health Checks&lt;/b&gt; menu item on the context menu and on the workload&amp;#8217;s &lt;b&gt;Action Menu&lt;/b&gt;. The &lt;b&gt;Edit Health Check&lt;/b&gt; form uses patterns and flows consistent with &lt;b&gt;Add Health Checks&lt;/b&gt;, as shown in Figure 3.&lt;/p&gt; &lt;div id="attachment_751247" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/4.5-HealthChecks-NotificationInTopology-03.png"&gt;&lt;img aria-describedby="caption-attachment-751247" class="wp-image-751247 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/4.5-HealthChecks-NotificationInTopology-03-1024x515.png" alt="A screenshot of the Edit Health Check form." width="640" height="322" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/4.5-HealthChecks-NotificationInTopology-03-1024x515.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/4.5-HealthChecks-NotificationInTopology-03-300x151.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/4.5-HealthChecks-NotificationInTopology-03-768x386.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-751247" class="wp-caption-text"&gt;Figure 3: Editing health checks on a configured workload.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;We hope that you will explore the new health checks feature in OpenShift 4.5. Incorporating health checks into your best practices will improve your application&amp;#8217;s reliability and uptime.&lt;/p&gt; &lt;h2&gt;Give us your feedback!&lt;/h2&gt; &lt;p&gt;A huge part of the OpenShift developer experience process is receiving feedback and collaborating with our community and customers. We&amp;#8217;d love to hear from you. We hope you will share your thoughts on the &lt;a target="_blank" rel="nofollow" href="https://forms.gle/zDd4tuWvjndCRVMD8"&gt;OpenShift 4.5 Developer Experience feedback page&lt;/a&gt;. You can also join our &lt;a target="_blank" rel="nofollow" href="https://groups.google.com/forum/#!forum/openshift-dev-users"&gt;OpenShift Developer Experience Google Group&lt;/a&gt; to participate in discussions and learn about our Office Hours sessions, where you can collaborate with us and provide feedback about your experience using the OpenShift web console.&lt;/p&gt; &lt;h2&gt;Get started with OpenShift 4.5&lt;/h2&gt; &lt;p&gt;Are you ready to get started with the new OpenShift 4.5 web console? &lt;a target="_blank" rel="nofollow" href="http://www.openshift.com/try"&gt;Try OpenShift 4.5 today&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F20%2Fbest-practices-using-health-checks-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Best%20practices%3A%20Using%20health%20checks%20in%20the%20OpenShift%204.5%20web%20console" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F20%2Fbest-practices-using-health-checks-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Best%20practices%3A%20Using%20health%20checks%20in%20the%20OpenShift%204.5%20web%20console" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F20%2Fbest-practices-using-health-checks-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Best%20practices%3A%20Using%20health%20checks%20in%20the%20OpenShift%204.5%20web%20console" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F20%2Fbest-practices-using-health-checks-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Best%20practices%3A%20Using%20health%20checks%20in%20the%20OpenShift%204.5%20web%20console" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F20%2Fbest-practices-using-health-checks-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Best%20practices%3A%20Using%20health%20checks%20in%20the%20OpenShift%204.5%20web%20console" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F20%2Fbest-practices-using-health-checks-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Best%20practices%3A%20Using%20health%20checks%20in%20the%20OpenShift%204.5%20web%20console" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F20%2Fbest-practices-using-health-checks-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Best%20practices%3A%20Using%20health%20checks%20in%20the%20OpenShift%204.5%20web%20console" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F20%2Fbest-practices-using-health-checks-in-the-openshift-4-5-web-console%2F&amp;#038;title=Best%20practices%3A%20Using%20health%20checks%20in%20the%20OpenShift%204.5%20web%20console" data-a2a-url="https://developers.redhat.com/blog/2020/07/20/best-practices-using-health-checks-in-the-openshift-4-5-web-console/" data-a2a-title="Best practices: Using health checks in the OpenShift 4.5 web console"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/20/best-practices-using-health-checks-in-the-openshift-4-5-web-console/"&gt;Best practices: Using health checks in the OpenShift 4.5 web console&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/hsqWAXq1Jdw" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;For an enterprise application to succeed, you need many moving parts to work correctly. If one piece breaks, the system must be able to detect the issue and operate without that component until it is repaired. Ideally, all of this should happen automatically. In this article, you will learn how to use health checks to [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/20/best-practices-using-health-checks-in-the-openshift-4-5-web-console/"&gt;Best practices: Using health checks in the OpenShift 4.5 web console&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/07/20/best-practices-using-health-checks-in-the-openshift-4-5-web-console/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">751187</post-id><dc:creator>Serena Chechile Nichols</dc:creator><dc:date>2020-07-20T07:00:13Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/20/best-practices-using-health-checks-in-the-openshift-4-5-web-console/</feedburner:origLink></entry><entry><title>Double your performance: virtual threads (fibers) and JDK 15/16!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ddXHyCOIgjA/double-your-performance-virtual-threads.html" /><category term="feed_group_name_jgroups" scheme="searchisko:content:tags" /><category term="feed_name_belasblog" scheme="searchisko:content:tags" /><category term="fibers &quot;virtual threads&quot; JDK 16 loom" scheme="searchisko:content:tags" /><author><name>Bela Ban</name></author><id>searchisko:content:id:jbossorg_blog-double_your_performance_virtual_threads_fibers_and_jdk_15_16</id><updated>2020-07-17T09:44:33Z</updated><published>2020-07-17T07:49:00Z</published><content type="html">If you use UDP as transport and want to &lt;b&gt;double your performance&lt;/b&gt;: read on!&lt;br /&gt;&lt;br /&gt;If you use TCP, your performance won't change much. You might still be interested in what more recent JDKs and &lt;a href="https://openjdk.java.net/projects/loom/"&gt;virtual threads&lt;/a&gt; (used to be called 'fibers') will bring to the table.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Virtual threads &lt;/h3&gt;&lt;br /&gt;Virtual threads are lightweight threads, similar in concept to the old Green Threads, and are managed by the JVM rather than the kernel. Many virtual threads can map to the same OS native (carrier) thread (only one at a time, of course), so we can have millions of virtual threads.&lt;br /&gt;&lt;br /&gt;Virtual threads are implemented with continuations, but that's a detail. What's important is that all blocking calls in the JDK (LockSupport.park() etc) have been modified to &lt;b&gt;yield&lt;/b&gt; rather than block. This means that we don't waste the precious native carrier thread, but simply go to a non-RUNNING state. When the block is over, the thread is simply marked as RUNNABLE again and the scheduler continues the continuation where it left off.&lt;br /&gt;&lt;br /&gt;Main advantages:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Blocking calls don't need to be changed, e.g. into reactive calls&lt;/li&gt;&lt;li&gt;No need for thread pools: simply create a virtual thread&lt;/li&gt;&lt;li&gt;Fewer context switches (reduced/eliminated blocking calls) &lt;/li&gt;&lt;li&gt;We can have lots of virtual threads&lt;/li&gt;&lt;/ul&gt;It will be a while until virtual threads show up in your JDK, but JGroups has already added support for it: just set &lt;span style="font-family: &amp;quot;courier new&amp;quot;, &amp;quot;courier&amp;quot;, monospace;"&gt;use_fibers="true"&lt;/span&gt; in the transport. If the JVM supports virtual threads, they will be used, otherwise we fall back to regular native threads.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;UDP: networking improvements&amp;nbsp;&lt;/h3&gt;While virtual threads bring advantages to JGroups, the other performance increase can be had by trying a more recent JDK.&lt;br /&gt;&lt;br /&gt;Starting in &lt;a href="http://openjdk.java.net/jeps/373"&gt;JDK 15&lt;/a&gt;, the implementation of DatagramSockets and MulticastSockets has been changed to delegate to DatagramChannels and MulticastChannels. In addition, virtual threads are supported.&lt;br /&gt;&lt;br /&gt;This increases the performance of UDP which uses DatagramChannels and MulticastChannels. &lt;br /&gt;&lt;br /&gt;The combination of networking code improvements and virtual threads leads to astonishing results for UDP, read below. &lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Performance&lt;/h3&gt;I used &lt;a href="http://www.jgroups.org/manual5/index.html#UPerf"&gt;UPerf&lt;/a&gt; for testing on a cluster of 8 (physical) boxes (1 GBit ethernet), with JDKs 11, 16-ea5 and 16-loom+2-14. The former two use native threads, the latter uses virtual threads.&lt;br /&gt;&lt;br /&gt;As can be seen in [1], UDP's performance goes from &lt;b&gt;44'691&lt;/b&gt; on JDK 11 to &lt;b&gt;81'402&lt;/b&gt; on JDK 16-ea5; that's a whopping &lt;b&gt;82% increase&lt;/b&gt;! Enabling virtual threads increases the performance between 16-ea5 and 16-loom+2-14 to &lt;b&gt;88'252&lt;/b&gt;, that's another &lt;b&gt;8%&lt;/b&gt;!&lt;br /&gt;&lt;br /&gt;&lt;b&gt;The performance difference between JDK 11 and 16-loom is 97%!&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;The difference in TCP's performance is miniscule; I guess because the TCP code was already optimized in JDK 11.&lt;br /&gt;&lt;br /&gt;Running in JDK 16-loom+2-14 shows that UDP's performance is now on par with TCP, as a matter of fact, &lt;b&gt;UDP is even 3% faster than TCP&lt;/b&gt;!&lt;br /&gt;&lt;br /&gt;If you want to try for yourself: head over to the &lt;a href="https://github.com/belaban/JGroups"&gt;JGroups Github repo&lt;/a&gt; and create the JAR (ant jar). Or wait a bit: I will soon release 5.0.0.Final which contains the changes.&lt;br /&gt;&lt;br /&gt;Not sure if I want to backport the changes to the 4.x branch...&lt;br /&gt;&lt;br /&gt;Enjoy! &lt;br /&gt;&lt;br /&gt;[1] &lt;a href="https://drive.google.com/file/d/1Ars1LOM7cEf6AWpPwZHeIfu_kKLa9gv0/view?usp=sharing"&gt;https://drive.google.com/file/d/1Ars1LOM7cEf6AWpPwZHeIfu_kKLa9gv0/view?usp=sharing&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;[2] &lt;a href="http://openjdk.java.net/jeps/373"&gt;http://openjdk.java.net/jeps/373&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ddXHyCOIgjA" height="1" width="1" alt=""/&gt;</content><summary>If you use UDP as transport and want to double your performance: read on! If you use TCP, your performance won't change much. You might still be interested in what more recent JDKs and virtual threads (used to be called 'fibers') will bring to the table. Virtual threads Virtual threads are lightweight threads, similar in concept to the old Green Threads, and are managed by the JVM rather than the ...</summary><dc:creator>Bela Ban</dc:creator><dc:date>2020-07-17T07:49:00Z</dc:date><feedburner:origLink>http://belaban.blogspot.com/2020/07/double-your-performance-virtual-threads.html</feedburner:origLink></entry><entry><title>Flexible single sign-on authentication and more in Open Liberty 20.0.0.7</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/5SzgwSlMB98/" /><category term="Java" /><category term="Kubernetes" /><category term="Microservices" /><category term="Security" /><category term="fault tolerance" /><category term="LTPA" /><category term="OpenLiberty" /><category term="openshift" /><category term="SPNEGO" /><author><name>Tom Jennings</name></author><id>https://developers.redhat.com/blog/?p=749007</id><updated>2020-07-17T07:00:52Z</updated><published>2020-07-17T07:00:52Z</published><content type="html">&lt;p&gt;Open Liberty 20.0.0.7 lets you disable the default of returning Lightweight Third-Party Authentication (LTPA) cookies for authentication when using Trust Association Interceptor (TAI) or Simple and Protected GSS-API Negotiation Mechanism (SPNEGO) authentication. You can also disable JSON Web Token (JWT)  cookies when using JWT&amp;#8217;s single sign-on (SSO) feature. In this article, we introduce these improvements and more in the new &lt;a target="_blank" rel="nofollow" href="https://openliberty.io/about"&gt;Open Liberty&lt;/a&gt; 20.0.0.7 release:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="#run"&gt;How to run your apps using Open Liberty 20.0.0.7&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#LTPA-cookie"&gt;How to disable LTPA cookies for TAI or SPNEGO&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#JWT-cookie"&gt;How to disable JWT SSO cookies&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#significant-bug-fixes"&gt;Significant bugs fixed in Open Liberty 20.0.0.7&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id="run"&gt;How to run your apps using Open Liberty 20.0.0.7&lt;/h2&gt; &lt;p&gt;Here are the coordinates if you&amp;#8217;re using &lt;a target="_blank" rel="nofollow" href="https://openliberty.io/guides/maven-intro.html"&gt;Maven&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;io.openliberty&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;openliberty-runtime&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;20.0.0.7&amp;#60;/version&amp;#62; &amp;#60;type&amp;#62;zip&amp;#60;/type&amp;#62; &amp;#60;/dependency&amp;#62; &lt;/pre&gt; &lt;p&gt;For &lt;a target="_blank" rel="nofollow" href="https://openliberty.io/guides/gradle-intro.html"&gt;Gradle&lt;/a&gt;, you would use:&lt;/p&gt; &lt;pre&gt;dependencies { libertyRuntime group: 'io.openliberty', name: 'openliberty-runtime', version: '[20.0.0.7,)' } &lt;/pre&gt; &lt;p&gt;If you&amp;#8217;re using a &lt;code&gt;docker&lt;/code&gt; container, it&amp;#8217;s:&lt;/p&gt; &lt;pre&gt;FROM open-liberty &lt;/pre&gt; &lt;p&gt;Another option is to download the Kernel package as a ZIP file from the &lt;a target="_blank" rel="nofollow" href="https://openliberty.io/downloads/"&gt;Open Liberty downloads page&lt;/a&gt;. You can then use the &lt;a target="_blank" rel="nofollow" href="https://openliberty.io/blog/2020/06/05/graphql-open-liberty-20006.html#MVN"&gt;&lt;code&gt;featureUtility&lt;/code&gt;&lt;/a&gt; command to add the features that you need to the kernel.&lt;/p&gt; &lt;h2 id="LTPA-cookie"&gt;How to disable LTPA cookies for TAI or SPNEGO&lt;/h2&gt; &lt;p&gt;LTPA cookies contain an encrypted authentication token with user identity and expiration information, which you can use for single sign-on (SSO) authentication. In Open Liberty 20.0.0.7, you can decide whether you want to receive the LTPA cookie when using TAI or SPNEGO for authentication.&lt;/p&gt; &lt;p&gt;When a client (like a browser) is authenticated with an Open Liberty server, the default response is to receive an SSO LTPA cookie in the HTTP servlet. When that client accesses another protected resource in the Open Liberty server sharing the same LTPA configuration, authentication with the SSO LTPA cookie takes priority over any other authentication mechanism. Prioritizing authentication with the SSO LTPA cookie can cause unintended results if you are using another authentication mechanism. You can now work around this by disabling the creation of LTPA cookies when using TAI and SPNEGO authentication.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to disable LTPA cookies for TAI in the &lt;code&gt;server.xml&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&amp;#60;server&amp;#62; &amp;#60;featureManager&amp;#62; &amp;#60;feature&amp;#62;appSecurity-2.0&amp;#60;/feature&amp;#62; &amp;#60;/featureManager&amp;#62; &amp;#60;trustAssociation id="sample" disableLtpaCookie="true" /&amp;#62; &amp;#60;/server&amp;#62; &lt;/pre&gt; &lt;p&gt;Here&amp;#8217;s how to disable LTPA cookies for SPNEGO (also in &lt;code&gt;server.xml&lt;/code&gt;):&lt;/p&gt; &lt;pre&gt;&amp;#60;server&amp;#62; &amp;#60;featureManager&amp;#62; &amp;#60;feature&amp;#62;spnego-1.0&amp;#60;/feature&amp;#62; &amp;#60;/featureManager&amp;#62; &amp;#60;spnego id="sample" disableLtpaCookie="true" /&amp;#62; &amp;#60;/server&amp;#62; &lt;/pre&gt; &lt;h2 id="JWT-cookie"&gt;How to disable JWT SSO cookies&lt;/h2&gt; &lt;p&gt;When a client (like a browser) is authenticated with an Open Liberty server through the JSON Web Tokens SSO feature (&lt;code&gt;jwtSso-1.0&lt;/code&gt;), the default response is a JWT SSO cookie in the HTTP servlet. When that client accesses another protected resource in the same Open Liberty server or a different one, authentication with the JWT cookie is prioritized over any other authentication mechanism. Prioritizing authentication with the JWT cookie can cause unintended results if you are using another authentication mechanism. You can now work around this issue by disabling JWT cookies when using the JWT SSO feature.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to disable JWT cookies for JWT SSO in the &lt;code&gt;server.xml&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&amp;#60;server&amp;#62; &amp;#60;featureManager&amp;#62; &amp;#60;feature&amp;#62;jwtSso-1.0&amp;#60;/feature&amp;#62; &amp;#60;/featureManager&amp;#62; &amp;#60;jwtSso id="sample" disableJwtCookie="true" /&amp;#62; &amp;#60;/server&amp;#62; &lt;/pre&gt; &lt;h2 id="significant-bug-fixes"&gt;Bug fixes in Open Liberty 20.0.0.7&lt;/h2&gt; &lt;p&gt;In this section, we describe just a few of the issues that we&amp;#8217;ve resolved with the 20.0.0.7 release. See &lt;a href="https://github.com/OpenLiberty/open-liberty/issues?q=label%3Arelease%3A20007+label%3A%22release+bug%22+"&gt;fixed bugs in Open Liberty 20.0.0.7&lt;/a&gt; for a complete review.&lt;/p&gt; &lt;h3&gt;Two bugs fixed in JAX-RS 2.1&lt;/h3&gt; &lt;p&gt;&lt;b&gt;Issue 8048: NullPointerException&lt;/b&gt;: If you&amp;#8217;ve seen a &lt;code&gt;NullPointerException&lt;/code&gt; when writing multipart form data in your JAX-RS response, the good news is that we fixed it. See issue &lt;a target="_blank" rel="nofollow" href="https://github.com/OpenLiberty/open-liberty/issues/8048"&gt;8048&lt;/a&gt; for details.&lt;/p&gt; &lt;p&gt;&lt;b&gt;Issue 12715: ContextResolver&lt;/b&gt;: A user needed a way to restrict JSON field serialization by a user&amp;#8217;s security role. They were able to make it work by using &lt;code&gt;ContextResolver&lt;/code&gt; to specify the JSON-B visibility strategy and injecting the &lt;code&gt;SecurityContext&lt;/code&gt;. Unfortunately, the injection into the &lt;code&gt;ContextResolver&lt;/code&gt; wasn&amp;#8217;t working. We fixed that with issue &lt;a target="_blank" rel="nofollow" href="https://github.com/OpenLiberty/open-liberty/issues/12715"&gt;12715&lt;/a&gt;, which makes a pretty cool use case.&lt;/p&gt; &lt;h3&gt;Improvements to HTTP/2&lt;/h3&gt; &lt;p&gt;&lt;b&gt;Issue 12599: HTTP/2 connection&lt;/b&gt;: A user reported a scenario involving excess CPU consumption when a client did not gracefully terminate an HTTP/2 connection. We&amp;#8217;ve resolved the CPU consumption with issue &lt;a target="_blank" rel="nofollow" href="https://github.com/OpenLiberty/open-liberty/issues/12599"&gt;12599&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;b&gt;Issue 12399: HTTP/2 flow control&lt;/b&gt;: In specific cases, Open Liberty was not updating its HTTP/2 read window quickly enough, causing the flow-control window to stall. We have improved the flow-control behavior with issue &lt;a target="_blank" rel="nofollow" href="https://github.com/OpenLiberty/open-liberty/issues/12399"&gt;12399.&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;Resolving a missing dependency in MicroProfile Fault Tolerance 2.1&lt;/h3&gt; &lt;p&gt;Before this release, adding a dependency to the &lt;a href="https://developers.redhat.com/cheat-sheets/microprofile-fault-tolerance"&gt;MicroProfile Fault Tolerance&lt;/a&gt; 2.1 feature in a &lt;code&gt;maven&lt;/code&gt; or &lt;code&gt;gradle&lt;/code&gt; build did not automatically add a corresponding dependency to the MicroProfile Fault Tolerance 2.1 API. In some cases, when writing or compiling an application that used the API, users received the error message:&lt;/p&gt; &lt;pre&gt;The import org.eclipse.microprofile.faulttolerance cannot be resolved&lt;/pre&gt; &lt;p&gt;We&amp;#8217;ve resolved the missing dependency with issue &lt;a target="_blank" rel="nofollow" href="https://github.com/OpenLiberty/open-liberty/issues/12567"&gt;12567&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Try Open Liberty 20.0.0.7 in Red Hat Runtimes&lt;/h2&gt; &lt;p&gt;Open Liberty is part of Red Hat Runtimes. If you&amp;#8217;re a &lt;a href="https://access.redhat.com/products/red-hat-runtimes" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;Red Hat Runtimes subscriber&lt;/a&gt;, you can try this new Open Liberty release now.&lt;/p&gt; &lt;p&gt;To learn more about deploying Open Liberty applications to &lt;a href="https://developers.redhat.com/openshift"&gt;Red Hat OpenShift&lt;/a&gt;, see our &lt;a href="https://openliberty.io/guides/cloud-openshift.html" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;&lt;i&gt;Open Liberty guide: Deploying microservices to OpenShift&lt;/i&gt;&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F17%2Fflexible-single-sign-on-authentication-and-more-in-open-liberty-20-0-0-7%2F&amp;#38;linkname=Flexible%20single%20sign-on%20authentication%20and%20more%20in%20Open%20Liberty%2020.0.0.7" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F17%2Fflexible-single-sign-on-authentication-and-more-in-open-liberty-20-0-0-7%2F&amp;#38;linkname=Flexible%20single%20sign-on%20authentication%20and%20more%20in%20Open%20Liberty%2020.0.0.7" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F17%2Fflexible-single-sign-on-authentication-and-more-in-open-liberty-20-0-0-7%2F&amp;#38;linkname=Flexible%20single%20sign-on%20authentication%20and%20more%20in%20Open%20Liberty%2020.0.0.7" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F17%2Fflexible-single-sign-on-authentication-and-more-in-open-liberty-20-0-0-7%2F&amp;#38;linkname=Flexible%20single%20sign-on%20authentication%20and%20more%20in%20Open%20Liberty%2020.0.0.7" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F17%2Fflexible-single-sign-on-authentication-and-more-in-open-liberty-20-0-0-7%2F&amp;#38;linkname=Flexible%20single%20sign-on%20authentication%20and%20more%20in%20Open%20Liberty%2020.0.0.7" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F17%2Fflexible-single-sign-on-authentication-and-more-in-open-liberty-20-0-0-7%2F&amp;#38;linkname=Flexible%20single%20sign-on%20authentication%20and%20more%20in%20Open%20Liberty%2020.0.0.7" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F17%2Fflexible-single-sign-on-authentication-and-more-in-open-liberty-20-0-0-7%2F&amp;#38;linkname=Flexible%20single%20sign-on%20authentication%20and%20more%20in%20Open%20Liberty%2020.0.0.7" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F17%2Fflexible-single-sign-on-authentication-and-more-in-open-liberty-20-0-0-7%2F&amp;#038;title=Flexible%20single%20sign-on%20authentication%20and%20more%20in%20Open%20Liberty%2020.0.0.7" data-a2a-url="https://developers.redhat.com/blog/2020/07/17/flexible-single-sign-on-authentication-and-more-in-open-liberty-20-0-0-7/" data-a2a-title="Flexible single sign-on authentication and more in Open Liberty 20.0.0.7"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/17/flexible-single-sign-on-authentication-and-more-in-open-liberty-20-0-0-7/"&gt;Flexible single sign-on authentication and more in Open Liberty 20.0.0.7&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/5SzgwSlMB98" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Open Liberty 20.0.0.7 lets you disable the default of returning Lightweight Third-Party Authentication (LTPA) cookies for authentication when using Trust Association Interceptor (TAI) or Simple and Protected GSS-API Negotiation Mechanism (SPNEGO) authentication. You can also disable JSON Web Token (JWT)  cookies when using JWT&amp;#8217;s single sign-on (SSO) feature. In this article, we introduce these improvements [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/17/flexible-single-sign-on-authentication-and-more-in-open-liberty-20-0-0-7/"&gt;Flexible single sign-on authentication and more in Open Liberty 20.0.0.7&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/07/17/flexible-single-sign-on-authentication-and-more-in-open-liberty-20-0-0-7/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">749007</post-id><dc:creator>Tom Jennings</dc:creator><dc:date>2020-07-17T07:00:52Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/17/flexible-single-sign-on-authentication-and-more-in-open-liberty-20-0-0-7/</feedburner:origLink></entry><entry><title>Migrating Spring Boot tests to Quarkus</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Gt3sf28OtjE/" /><category term="Java" /><category term="Modern App Dev" /><category term="Quarkus" /><category term="Serverless" /><category term="Spring Boot" /><category term="application migration" /><category term="Mockito" /><category term="openshift" /><category term="software testing" /><category term="test migration" /><author><name>rassmith</name></author><id>https://developers.redhat.com/blog/?p=747827</id><updated>2020-07-17T07:00:19Z</updated><published>2020-07-17T07:00:19Z</published><content type="html">&lt;p&gt;As developers, we don&amp;#8217;t always consider test migration when we think about adopting a new framework. Tests are important, however, because they ensure that our code meets its requirements and works as desired, especially when we add new features and functionality.&lt;/p&gt; &lt;p&gt;Test migration is an essential part of migrating to a new application development framework. This article is for developers who are migrating a &lt;a href="https://developers.redhat.com/topics/spring-boot/"&gt;Spring Boot&lt;/a&gt; application to &lt;a href="https://developers.redhat.com/topics/quarkus/"&gt;Quarkus&lt;/a&gt;. I will use three sample tests to demonstrate a test migration from Spring Boot to Quarkus. While Quarkus is compatible with Spring Boot Web, not all of Spring Boot&amp;#8217;s test functionalities map to Quarkus. I will introduce you to other test dependencies and Quarkus capabilities that you can use in these cases.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;What is Quarkus?&lt;/b&gt; Quarkus is a full-stack, &lt;a href="https://developers.redhat.com/topics/kubernetes"&gt;Kubernetes&lt;/a&gt;-native &lt;a href="https://developers.redhat.com/topics/enterprise-java"&gt;Java&lt;/a&gt; framework made for Java virtual machines and native compilation. Spring Boot optimizes Java for &lt;a href="https://developers.redhat.com/topics/containers"&gt;containers&lt;/a&gt;, making it an effective platform for &lt;a href="https://developers.redhat.com/topics/serverless-architecture"&gt;serverless&lt;/a&gt;, &lt;a&gt;cloud&lt;/a&gt;, and Kubernetes environments.&lt;/p&gt; &lt;h2&gt;Getting started with a test migration&lt;/h2&gt; &lt;p&gt;The &lt;a target="_blank" rel="nofollow" href="https://quarkus.io"&gt;Quarkus community site&lt;/a&gt; contains detailed &lt;a target="_blank" rel="nofollow" href="https://quarkus.io/guides/getting-started-testing"&gt;documentation&lt;/a&gt; about the different ways to write tests for Quarkus applications. I used this documentation as a basis for migrating a Spring Boot sample application to Quarkus. I also used &lt;a target="_blank" rel="nofollow" href="https://github.com/quarkusio/quarkus/tree/master/integration-tests"&gt;test examples&lt;/a&gt; from the &lt;a target="_blank" rel="nofollow" href="https://github.com/quarkusio"&gt;Quarkus GitHub repository&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;The sample application&lt;/h2&gt; &lt;p&gt;Our Spring Boot sample application allows employees to complete surveys where they rate the skills of other employees assigned to the same project. Our task is to migrate the application tests from Spring Boot to Quarkus. To get started, check out the source code for the &lt;a target="_blank" rel="nofollow" href="https://github.com/redhat-appdev-practice/spring-rest-surveygroups"&gt;Spring Boot application&lt;/a&gt; and the &lt;a target="_blank" rel="nofollow" href="https://github.com/redhat-appdev-practice/survey-quarkus-spring-service"&gt;Quarkus application&lt;/a&gt;.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: For the examples, I assume that you have already started the process of migrating a Spring Boot app to Quarkus. I won&amp;#8217;t offer much detail about either framework. The focus of this article is test migration.&lt;/p&gt; &lt;h3&gt;Test dependencies&lt;/h3&gt; &lt;p&gt;For this migration, we will use the &lt;a target="_blank" rel="nofollow" href="https://junit.org/junit5"&gt;JUnit 5&lt;/a&gt; and &lt;a target="_blank" rel="nofollow" href="http://rest-assured.io"&gt;REST Assured&lt;/a&gt; test dependencies, as shown in the Maven &lt;code&gt;pom.xml&lt;/code&gt; below:&lt;/p&gt; &lt;pre&gt;&amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;io.quarkus&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;quarkus-junit5&amp;#60;/artifactId&amp;#62; &amp;#60;scope&amp;#62;test&amp;#60;/scope&amp;#62; &amp;#60;/dependency&amp;#62; &amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;io.rest-assured&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;rest-assured&amp;#60;/artifactId&amp;#62; &amp;#60;scope&amp;#62;test&amp;#60;/scope&amp;#62; &amp;#60;/dependency&amp;#62; &lt;/pre&gt; &lt;h3&gt;Test folder structure&lt;/h3&gt; &lt;p&gt;Figure 1 shows the current structure of the tests:&lt;/p&gt; &lt;div id="attachment_747937" style="width: 429px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/Screenshot-from-2020-06-09-23-49-49.png"&gt;&lt;img aria-describedby="caption-attachment-747937" class="wp-image-747937 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/Screenshot-from-2020-06-09-23-49-49.png" alt="A screenshot of the Maven directory." width="419" height="250" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/Screenshot-from-2020-06-09-23-49-49.png 419w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/Screenshot-from-2020-06-09-23-49-49-300x179.png 300w" sizes="(max-width: 419px) 100vw, 419px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-747937" class="wp-caption-text"&gt;Figure 1: Structure of the Spring Boot tests in a Project directory.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Example 1: SurveyControllerIntegrationTest.java&lt;/h2&gt; &lt;p&gt;For each of our Spring Boot tests, we&amp;#8217;ll need to change the annotations to be compatible with Quarkus. Notice the annotations in our first example, &lt;code&gt;SurveyControllerIntegrationTest.java&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;@SpringBootTest @AutoConfigureMockMvc @ActiveProfiles(“test”) public class SurveyControllerIntegrationTest { @Autowired private MockMvc mockMvc; @Autowired private ObjectMapper mapper;      @Autowired private SurveyGroupRepository surveyGroupRepository; … &lt;/pre&gt; &lt;p&gt;Quarkus does not need the &lt;code&gt;@SpringBootTest&lt;/code&gt; annotation, and it doesn&amp;#8217;t support &lt;code&gt;@AutoConfiguremockMvc&lt;/code&gt;. Instead, tests in Quarkus are annotated with &lt;code&gt;@QuarkusTest&lt;/code&gt;. Tests that interact with the database are annotated with &lt;code&gt;@Transactional&lt;/code&gt;. In the sample below, we remove the &lt;code&gt;@Autowired MockMvc&lt;/code&gt; MVC annotation. Also note that instead of using Spring Boot&amp;#8217;s &lt;code&gt;@Autowired&lt;/code&gt; on the repository, Quarkus uses &lt;code&gt;@Inject&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;@Transactional @QuarkusTest public class SurveyControllerIntegrationTest { @Autowired private ObjectMapper mapper; @Inject private SurveyGroupRepository surveyGroupRepository; … &lt;/pre&gt; &lt;h3&gt;Migrating from MockMvc to REST Assured&lt;/h3&gt; &lt;p&gt;As I mentioned, Quarkus does not support &lt;code&gt;MockMvc&lt;/code&gt;. While it does have other &lt;a target="_blank" rel="nofollow" href="https://quarkus.io/guides/getting-started-testing#mock-support"&gt;mocking capabilities&lt;/a&gt;, it&amp;#8217;s best to use REST Assured to test the controller in Quarkus. REST Assured is a Java library that allows you to test APIs using a domain-specific language (DSL).&lt;/p&gt; &lt;p&gt;In this first example, you can see how Spring Boot uses &lt;code&gt;MockMvc&lt;/code&gt; to test a &lt;code&gt;POST&lt;/code&gt; survey-group request:&lt;/p&gt; &lt;pre&gt;@Test public void shouldPersistASurveyGroup() throws Exception { MvcResult result = mockMvc.perform(post(“/surveygroups”) .contentType(MediaType.APPLICATION_JSON) .content(mapper.writeValueAsString(ResourceHelper.getDefaultSurveyGroupResource()))) .andExpect(status().isCreated()) .andReturn(); String locationHeader = result.getResponse().getHeader(“location”); List&amp;#60;SurveyGroup&amp;#62; surveyGroups = surveyGroupRepository.findAll(); SurveyGroup surveyGroup = surveyGroups.get(0); assertTrue(surveyGroups.size() == 1); assertTrue(locationHeader.contains(surveyGroup.getGuid())); }&lt;/pre&gt; &lt;p&gt;Here&amp;#8217;s how you would use REST Assured in Quarkus to write a similar test:&lt;/p&gt; &lt;pre&gt;@Test public void shouldPersistASurveyGroup() throws Exception { String location =&lt;strong&gt; RestAssured.&lt;/strong&gt;given().accept(ContentType.JSON).request() .contentType(ContentType.JSON) .body(ResourceHelper.getDefaultSurveyGroupResource()) .when().post(“/surveygroups”).then() .statusCode(201).extract().header(“Location”); String guid = location.toString().replace(“http://localhost:8081/surveygroups/”, “”); assertTrue(repository.findByGuid(guid).isPersistent()); } &lt;/pre&gt; &lt;p&gt;As a result, &lt;code&gt;SurveyControllerTest.java&lt;/code&gt; is not necessary when using Quarkus, because its testing can be covered with Rest Assured.&lt;/p&gt; &lt;h2&gt;Example 2: SurveyGroupRepositoryIntegrationTest.java&lt;/h2&gt; &lt;p&gt;We will need to change the annotations for this Spring Boot test, as well:&lt;/p&gt; &lt;pre&gt;@DataJpaTest @ActiveProfiles(“test”) public class SurveyGroupRepositoryIntegrationTest { @Autowired private SurveyGroupRepository surveyGroupRepository; … &lt;/pre&gt; &lt;p&gt;Once again, we use the &lt;code&gt;@Inject&lt;/code&gt; annotation instead of &lt;code&gt;@Autowired&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt; @Transactional @QuarkusTest public class SurveyGroupRepositoryIntegrationTest { @Inject private SurveyGroupRepository surveyGroupRepository; … &lt;/pre&gt; &lt;h3&gt;Migrating repository tests to Quarkus&lt;/h3&gt; &lt;p&gt;Here is one of the Spring Boot repository tests for this sample:&lt;/p&gt; &lt;pre&gt;@Test public void shouldPersistSurveyGroup() { SurveyGroup surveyGroup = new SurveyGroup(); surveyGroup.setGuid(“guid123”); surveyGroup = this.surveyGroupRepository.saveAndFlush(surveyGroup); assertNotNull(surveyGroup.getId()); assertTrue(surveyGroup.getGuid().equals(“guid123”)); } &lt;/pre&gt; &lt;p&gt;Notice that the Spring Boot application uses a Java Persistence API (JPA) repository. To optimize this test for Quarkus, we&amp;#8217;ll change the repository to &lt;a target="_blank" rel="nofollow" href="https://quarkus.io/guides/hibernate-orm-panache"&gt;Panache&lt;/a&gt;, a Hibernate ORM (object-relational mapper) that implements JPA. We also have to change a few of the methods in the Spring Boot test. For example, we now have to use &lt;code&gt;surveyGroupRepository.persistAndFlush()&lt;/code&gt; rather than &lt;code&gt;surveyGroupRepository.saveAndFlush()&lt;/code&gt;. Other than these small changes, the majority of the repository tests remain the same:&lt;/p&gt; &lt;pre&gt;@Test public void shouldPersistSurveyGroup() { SurveyGroup surveyGroup = new SurveyGroup(); surveyGroup.setGuid(“guid1234”); this.surveyGroupRepository.persistAndFlush(surveyGroup); SurveyGroup sg = surveyGroupRepository.findByGuid(“guid1234”); assertTrue(sg.getGuid().equals(“guid1234”)); } &lt;/pre&gt; &lt;h2&gt;Example 3: SurveyServiceImpl.java&lt;/h2&gt; &lt;p&gt;In this example, we can see that the Spring Boot test uses Mockito, and it also injects mocks:&lt;/p&gt; &lt;pre&gt;@ExtendWith(MockitoExtension.class) public class SurveyServiceImplTest { @Mock private SurveyGroupRepository repository; @InjectMocks private SurveyServiceImpl surveyService; … &lt;/pre&gt; &lt;p&gt;Quarkus does not support &lt;code&gt;MockitoExtension&lt;/code&gt;, and while Quarkus does have mocking capabilities, we can test the &lt;code&gt;SurveyService&lt;/code&gt; without mocks. To migrate this test to Quarkus, we inject the repository and service, as well as a test resource:&lt;/p&gt; &lt;pre&gt;@QuarkusTest @Transactional @QuarkusTestResource(H2DatabaseTestResource.class) public class SurveyServiceImplTest { @Inject private SurveyGroupRepository repository; @Inject private SurveyServiceImpl surveyService; … &lt;/pre&gt; &lt;h3&gt;No more mocks&lt;/h3&gt; &lt;p&gt;Notice that this Spring Boot test uses mocking to see if a &lt;code&gt;surveyGroup&lt;/code&gt; has been created:&lt;/p&gt; &lt;pre&gt;@Test public void shouldCreateSurveyGroup() { SurveyGroup surveyGroup = new SurveyGroup(); when(this.repository.saveAndFlush(surveyGroup)).thenReturn(surveyGroup); this.surveyService.createSurveyGroup(surveyGroup); verify(this.repository).saveAndFlush(surveyGroup); } &lt;/pre&gt; &lt;p&gt;For our migration, we removed mocking and injected the repository and service instead. So, we can simply create a new instance of a &lt;code&gt;surveyGroup&lt;/code&gt; and call the service methods directly onto it, to test its functionality:&lt;/p&gt; &lt;pre&gt;@Test public void shouldCreateSurveyGroup() { SurveyGroup surveyGroup = new SurveyGroup(); this.surveyService.createSurveyGroup(surveyGroup); assertTrue(repository.listAll() != null); } &lt;/pre&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;I hope the three test migration examples in this article have provided a helpful overview for migrating Spring Boot tests to Quarkus. I did not cover all of the tests in the provided sample application, so feel free to reference the &lt;a target="_blank" rel="nofollow" href="https://github.com/spring-projects/spring-boot/tree/master/spring-boot-tests"&gt;Spring Boot GitHub repository&lt;/a&gt; to see more test migration examples. I also hope that you will explore the Quarkus test documentation links that I provided throughout the article, as well as the &lt;a target="_blank" rel="nofollow" href="https://github.com/quarkusio/quarkus/tree/master/integration-tests"&gt;Quarkus test GitHub repository&lt;/a&gt; for more examples.&lt;/p&gt; &lt;h2&gt;Additional resources&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://quarkus.io/blog/quarkus-for-spring-developers/"&gt;&lt;i&gt;Quarkus for Spring developers&lt;/i&gt;&lt;/a&gt; is a good resource for Spring developers considering Quarkus.&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/courses/quarkus/spring/"&gt;Quarkus for Spring Boot developers&lt;/a&gt; is a self-paced tutorial for Spring and Spring Boot developers migrating to Quarkus.&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2020/01/02/kubernetes-native-spring-apps-on-quarkus/"&gt;DevNation Tech Talk: Kubernetes-native Spring apps on Quarkus&lt;/a&gt; is a live-coding demonstration of a Quarkus application using popular Spring features.&lt;/li&gt; &lt;li&gt;For more about migrating Spring Boot apps to Quarkus, see &lt;a href="https://developers.redhat.com/blog/2020/04/10/migrating-a-spring-boot-microservices-application-to-quarkus/"&gt;&lt;i&gt;Migrating a Spring Boot microservices application to Quarkus&lt;/i&gt;&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F17%2Fmigrating-spring-boot-tests-to-quarkus%2F&amp;#38;linkname=Migrating%20Spring%20Boot%20tests%20to%20Quarkus" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F17%2Fmigrating-spring-boot-tests-to-quarkus%2F&amp;#38;linkname=Migrating%20Spring%20Boot%20tests%20to%20Quarkus" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F17%2Fmigrating-spring-boot-tests-to-quarkus%2F&amp;#38;linkname=Migrating%20Spring%20Boot%20tests%20to%20Quarkus" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F17%2Fmigrating-spring-boot-tests-to-quarkus%2F&amp;#38;linkname=Migrating%20Spring%20Boot%20tests%20to%20Quarkus" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F17%2Fmigrating-spring-boot-tests-to-quarkus%2F&amp;#38;linkname=Migrating%20Spring%20Boot%20tests%20to%20Quarkus" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F17%2Fmigrating-spring-boot-tests-to-quarkus%2F&amp;#38;linkname=Migrating%20Spring%20Boot%20tests%20to%20Quarkus" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F17%2Fmigrating-spring-boot-tests-to-quarkus%2F&amp;#38;linkname=Migrating%20Spring%20Boot%20tests%20to%20Quarkus" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F17%2Fmigrating-spring-boot-tests-to-quarkus%2F&amp;#038;title=Migrating%20Spring%20Boot%20tests%20to%20Quarkus" data-a2a-url="https://developers.redhat.com/blog/2020/07/17/migrating-spring-boot-tests-to-quarkus/" data-a2a-title="Migrating Spring Boot tests to Quarkus"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/17/migrating-spring-boot-tests-to-quarkus/"&gt;Migrating Spring Boot tests to Quarkus&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Gt3sf28OtjE" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;As developers, we don&amp;#8217;t always consider test migration when we think about adopting a new framework. Tests are important, however, because they ensure that our code meets its requirements and works as desired, especially when we add new features and functionality. Test migration is an essential part of migrating to a new application development framework. [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/17/migrating-spring-boot-tests-to-quarkus/"&gt;Migrating Spring Boot tests to Quarkus&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/07/17/migrating-spring-boot-tests-to-quarkus/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">747827</post-id><dc:creator>rassmith</dc:creator><dc:date>2020-07-17T07:00:19Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/17/migrating-spring-boot-tests-to-quarkus/</feedburner:origLink></entry><entry><title>Improved navigation in the OpenShift 4.5 Developer perspective</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ZKEu665Zol0/" /><category term="Containers" /><category term="Kubernetes" /><category term="Developer Perspective" /><category term="OpenShift 4.5" /><author><name>Jan Kleinert</name></author><id>https://developers.redhat.com/blog/?p=746717</id><updated>2020-07-16T14:47:43Z</updated><published>2020-07-16T14:47:43Z</published><content type="html">&lt;p&gt;The new &lt;a href="https://developers.redhat.com/blog/2020/07/13/whats-new-in-the…loper-experience/"&gt;Red Hat OpenShift 4.5 release&lt;/a&gt; includes a more streamlined and customizable navigation experience in the web console&amp;#8217;s Developer perspective. In this article, we quickly share the highlights of the new navigation features that we added based on user feedback.&lt;/p&gt; &lt;h2&gt;A new navigation scheme for discoverability&lt;/h2&gt; &lt;p&gt;To help with discoverability, we&amp;#8217;ve moved to a flat navigation scheme that has three sections in the main navigation, as shown in Figure 1.&lt;/p&gt; &lt;div id="attachment_746737" style="width: 298px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F01.png"&gt;&lt;img aria-describedby="caption-attachment-746737" class="wp-image-746737 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F01.png" alt="A screenshot of the new, three-part navigation scheme." width="288" height="531" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F01.png 288w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F01-163x300.png 163w" sizes="(max-width: 288px) 100vw, 288px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746737" class="wp-caption-text"&gt;Figure 1: An overview of the main navigation in the OpenShift 4.5 web console&amp;#8217;s Developer perspective.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The first section of the navigation is task-based. In this section, you can use the &lt;b&gt;+Add&lt;/b&gt; button to add new applications or components to your project. This section is further organized into three areas:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;Topology&lt;/b&gt;: View and interact with the applications in your project.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Monitoring&lt;/b&gt;: Access project details, including a dashboard, metrics, and events.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Search&lt;/b&gt;: Find project resources based on the resource type, label, or name.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The second section is object-based, with the options:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Builds&lt;/strong&gt;: Access builds, BuildConfigs, and pipelines.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Helm&lt;/strong&gt;: Access Helm releases.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Project&lt;/strong&gt;: Access information about the project.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The third section is a customizable area where you can add your most frequently used resources for quick access. We added this section based on feedback that many users were going to the Administrator perspective to access resources such as secrets and config maps. You can now access secrets and config maps in this section by default.&lt;/p&gt; &lt;h2&gt;Customizable navigation&lt;/h2&gt; &lt;p&gt;You can now use the Search page to find and add items to the navigation, as shown in Figure 2.&lt;/p&gt; &lt;div id="attachment_746747" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F02.png"&gt;&lt;img aria-describedby="caption-attachment-746747" class="wp-image-746747 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F02-1024x410.png" alt="A screenshot of the Search page with the option to add an item to the navigation pane." width="640" height="256" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F02-1024x410.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F02-300x120.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F02-768x308.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F02.png 1291w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746747" class="wp-caption-text"&gt;Figure 2: Use the Search page to find components to add to the navigation.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;You can also remove items from the navigation by hovering over the menu item and clicking the blue circle with the minus (-) symbol, as shown in Figure 3.&lt;/p&gt; &lt;div id="attachment_746757" style="width: 295px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F03.png"&gt;&lt;img aria-describedby="caption-attachment-746757" class="wp-image-746757 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-Nav-F03.png" alt="A screenshot of the main navigation with the option to remove an item." width="285" height="109" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746757" class="wp-caption-text"&gt;Figure 3: Easily remove items from the main navigation.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Navigation improvements to the Developer perspective in the &lt;a href="https://developers.redhat.com/products/openshift/getting-started"&gt;OpenShift&lt;/a&gt; 4.5 web console are based on user feedback. We hope the updates make it easier and quicker for you to interact with your projects.&lt;/p&gt; &lt;h2&gt;Give us your feedback!&lt;/h2&gt; &lt;p&gt;A huge part of the OpenShift developer experience process is receiving feedback and collaborating with our community and customers. We&amp;#8217;d love to hear from you. We hope you will share your thoughts on the &lt;a target="_blank" rel="nofollow" href="https://forms.gle/zDd4tuWvjndCRVMD8"&gt;OpenShift 4.5 Developer Experience feedback page&lt;/a&gt;. You can also join our &lt;a target="_blank" rel="nofollow" href="https://groups.google.com/forum/#!forum/openshift-dev-users"&gt;OpenShift Developer Experience Google Group&lt;/a&gt; to participate in discussions and learn about our Office Hours sessions, where you can collaborate with us and provide feedback about your experience using the OpenShift web console.&lt;/p&gt; &lt;h2&gt;Get started with OpenShift 4.5&lt;/h2&gt; &lt;p&gt;Are you ready to get started with the new OpenShift 4.5 web console? &lt;a target="_blank" rel="nofollow" href="http://www.openshift.com/try"&gt;Try OpenShift 4.5 today&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F16%2Fimproved-navigation-in-the-openshift-4-5-developer-perspective%2F&amp;#38;linkname=Improved%20navigation%20in%20the%20OpenShift%204.5%20Developer%20perspective" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F16%2Fimproved-navigation-in-the-openshift-4-5-developer-perspective%2F&amp;#38;linkname=Improved%20navigation%20in%20the%20OpenShift%204.5%20Developer%20perspective" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F16%2Fimproved-navigation-in-the-openshift-4-5-developer-perspective%2F&amp;#38;linkname=Improved%20navigation%20in%20the%20OpenShift%204.5%20Developer%20perspective" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F16%2Fimproved-navigation-in-the-openshift-4-5-developer-perspective%2F&amp;#38;linkname=Improved%20navigation%20in%20the%20OpenShift%204.5%20Developer%20perspective" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F16%2Fimproved-navigation-in-the-openshift-4-5-developer-perspective%2F&amp;#38;linkname=Improved%20navigation%20in%20the%20OpenShift%204.5%20Developer%20perspective" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F16%2Fimproved-navigation-in-the-openshift-4-5-developer-perspective%2F&amp;#38;linkname=Improved%20navigation%20in%20the%20OpenShift%204.5%20Developer%20perspective" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F16%2Fimproved-navigation-in-the-openshift-4-5-developer-perspective%2F&amp;#38;linkname=Improved%20navigation%20in%20the%20OpenShift%204.5%20Developer%20perspective" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F16%2Fimproved-navigation-in-the-openshift-4-5-developer-perspective%2F&amp;#038;title=Improved%20navigation%20in%20the%20OpenShift%204.5%20Developer%20perspective" data-a2a-url="https://developers.redhat.com/blog/2020/07/16/improved-navigation-in-the-openshift-4-5-developer-perspective/" data-a2a-title="Improved navigation in the OpenShift 4.5 Developer perspective"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/16/improved-navigation-in-the-openshift-4-5-developer-perspective/"&gt;Improved navigation in the OpenShift 4.5 Developer perspective&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ZKEu665Zol0" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;The new Red Hat OpenShift 4.5 release includes a more streamlined and customizable navigation experience in the web console&amp;#8217;s Developer perspective. In this article, we quickly share the highlights of the new navigation features that we added based on user feedback. A new navigation scheme for discoverability To help with discoverability, we&amp;#8217;ve moved to a [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/16/improved-navigation-in-the-openshift-4-5-developer-perspective/"&gt;Improved navigation in the OpenShift 4.5 Developer perspective&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/07/16/improved-navigation-in-the-openshift-4-5-developer-perspective/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">746717</post-id><dc:creator>Jan Kleinert</dc:creator><dc:date>2020-07-16T14:47:43Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/16/improved-navigation-in-the-openshift-4-5-developer-perspective/</feedburner:origLink></entry><entry><title>What’s new in the OpenShift 4.5 console developer experience</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ipisJDE4llI/" /><category term="DevOps" /><category term="Event-Driven" /><category term="Kubernetes" /><category term="Operator" /><category term="helm charts" /><category term="Kubernetes developer" /><category term="OpenShift 4.5" /><category term="startup probe" /><category term="Virtual Machines" /><author><name>Serena Chechile Nichols</name></author><id>https://developers.redhat.com/blog/?p=746567</id><updated>2020-07-16T07:00:37Z</updated><published>2020-07-16T07:00:37Z</published><content type="html">&lt;p&gt;Each new release of &lt;a target="_blank" rel="nofollow" href="https://www.openshift.com/"&gt;Red Hat OpenShift&lt;/a&gt; includes usability improvements and features to help developers meet their goals. In OpenShift 4.5, we&amp;#8217;ve improved navigation and added a mechanism for customizing navigation and accessing frequently used resources from the Developer perspective.&lt;/p&gt; &lt;p&gt;We&amp;#8217;ve also brought application health checks back, added capabilities for Helm, and improved &lt;a href="https://developers.redhat.com/topics/kubernetes/operators"&gt;Red Hat Operators&lt;/a&gt; with these features:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Support for creating event sources in the web console.&lt;/li&gt; &lt;li&gt;New pipeline capabilities in the OpenShift Pipelines Operator.&lt;/li&gt; &lt;li&gt;A unified experience for virtual machines alongside your containers.&lt;/li&gt; &lt;li&gt;Easy access to command-line tools in a web terminal.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This article offers a preview of the goodies you get with OpenShift 4.5.&lt;/p&gt; &lt;h2&gt;Customizable developer navigation&lt;/h2&gt; &lt;p&gt;Have you found yourself frequently searching for the same resource type or switching to the Administrator perspective to access specific resources? OpenShift 4.5 has the answer! As one of several navigation improvements, OpenShift 4.5 now lets you use the Search page to find frequently used resources and add them to your navigation.&lt;/p&gt; &lt;p&gt;We added this feature because we heard from many users that they were using the Administrator perspective to access frequently used resources. Based on the same feedback, we also have pre-added ConfigMaps and Secrets to the default navigation, as shown in Figure 1.&lt;/p&gt; &lt;div id="attachment_751477" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F01-CustomizeNav-resized.gif"&gt;&lt;img aria-describedby="caption-attachment-751477" class="wp-image-751477 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F01-CustomizeNav-resized.gif" alt="Demo of customizing navigation" width="640" height="312" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-751477" class="wp-caption-text"&gt;Figure 1: Customizable navigation with ConfigMaps and Secrets added by default.&lt;/p&gt;&lt;/div&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Learn more&lt;/b&gt;: See &lt;a href="https://developers.redhat.com/blog/2020/07/13/improved-navigat…oper-perspective/ ‎"&gt;&lt;i&gt;Improved navigation in the OpenShift 4.5 Developer perspective&lt;/i&gt;&lt;/a&gt; for more about navigation improvements in the Developer perspective.&lt;/p&gt; &lt;h2&gt;Health checks are back in the web console&lt;/h2&gt; &lt;p&gt;Application health checks were available in the OpenShift 3 web console, and we&amp;#8217;ve received many requests to reinstate this feature on the application development side. In OpenShift 4.5, developers can once again use application health checks to proactively detect, handle, and mitigate certain situations.&lt;/p&gt; &lt;p&gt;You can add liveness, readiness, and startup probes as health checks from the OpenShift 4.5 web console. As shown in Figure 2, you can use the Advanced Options feature during creation, or you can add or edit health checks after you&amp;#8217;ve created an application.&lt;/p&gt; &lt;div id="attachment_751537" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F02-HealthCheck-AdvOptions-resized.gif"&gt;&lt;img aria-describedby="caption-attachment-751537" class="wp-image-751537" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F02-HealthCheck-AdvOptions-resized.gif" alt="Demo of adding a health check with Advanced Options." width="640" height="316" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-751537" class="wp-caption-text"&gt;Figure 2: Use the Advanced Options feature to add application health checks when you create your app.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Health check notifications&lt;/h3&gt; &lt;p&gt;If you have not configured health checks, you will see a notification displayed in the side panel of the new Topology view, as shown in Figure 3. The notification supports discoverability and provides a quick link for remediation.&lt;/p&gt; &lt;div id="attachment_746637" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F03-HealthCheck-Notification.png"&gt;&lt;img aria-describedby="caption-attachment-746637" class="wp-image-746637 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F03-HealthCheck-Notification-1024x502.png" alt="A screenshot of the new health check notifications feaure." width="640" height="314" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F03-HealthCheck-Notification-1024x502.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F03-HealthCheck-Notification-300x147.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F03-HealthCheck-Notification-768x377.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746637" class="wp-caption-text"&gt;Figure 3: Health check notifications in the new Topology view.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;New capabilities for Helm charts&lt;/h2&gt; &lt;p&gt;We&amp;#8217;ve upped our game with &lt;a target="_blank" rel="nofollow" href="https://www.openshift.com/blog/getting-started-helm-openshift"&gt;Helm charts&lt;/a&gt; in OpenShift 4.5. Developers can now use the web console to instantly access release notes for an installed Helm chart, and you can also access release information on-demand as needed.&lt;/p&gt; &lt;p&gt;You can use the side panel in the web console&amp;#8217;s Topology view to upgrade a Helm release. The new &lt;b&gt;Upgrade&lt;/b&gt; action lets you update to a new version or directly edit the YAML file for your current release. The &lt;b&gt;Rollback&lt;/b&gt; action lets you open the &lt;b&gt;Revisions&lt;/b&gt; tab of a Helm Releases details page and see the revisions to a release. Finally, the new &lt;b&gt;Uninstall&lt;/b&gt; action uninstalls and cleans up all of the resources that were added during a Helm chart installation.&lt;/p&gt; &lt;p&gt;You can access these actions from the web console&amp;#8217;s Topology view, using the &lt;b&gt;Actions&lt;/b&gt; menu in the Topology side panel, as shown in Figure 4. Another option is to use the &lt;b&gt;Actions&lt;/b&gt; menu on the Helm Releases page.&lt;/p&gt; &lt;div id="attachment_746647" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F04-HelmReleaseActions.png"&gt;&lt;img aria-describedby="caption-attachment-746647" class="wp-image-746647 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F04-HelmReleaseActions-1024x502.png" alt="A screenshot of the Helm release actions in the Topology view." width="640" height="314" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F04-HelmReleaseActions-1024x502.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F04-HelmReleaseActions-300x147.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F04-HelmReleaseActions-768x376.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746647" class="wp-caption-text"&gt;Figure 4: Helm release actions in the side panel of the Topology view.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Operator improvements&lt;/h2&gt; &lt;p&gt;We also added a number of Operator-related improvements.&lt;/p&gt; &lt;h3&gt;Create event sources in the web console&lt;/h3&gt; &lt;p&gt;The &lt;a href="https://developers.redhat.com/topics/serverless-architecture"&gt;Red Hat OpenShift Serverless&lt;/a&gt; Operator already enhances the developer experience in OpenShift. With OpenShift 4.5, we&amp;#8217;ve made the experience even better by letting developers create event sources through the web console.&lt;/p&gt; &lt;p&gt;Event sources provide a mechanism for event providers to connect to your application and send events. In &lt;a href="https://developers.redhat.com/blog/category/topics/knative/"&gt;Knative&lt;/a&gt;, events are based on the &lt;a target="_blank" rel="nofollow" href="https://cloudevents.io/"&gt;Cloud Events Specification&lt;/a&gt;, which lets users describe event data in a cloud-agnostic way. Knative services by nature are scaled down to zero once they&amp;#8217;ve been idle for a set time. With event sources, providers can send events that automatically scale up the Knative service and make it available as needed.&lt;/p&gt; &lt;p&gt;As shown in Figure 5, developers can now use a form-based mechanism to create event sources and then use a Knative service as a &amp;#8220;sink&amp;#8221; or destination for the events.&lt;/p&gt; &lt;div id="attachment_752557" style="width: 649px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F05-EventSourceCreation-resized-1.gif"&gt;&lt;img aria-describedby="caption-attachment-752557" class="wp-image-752557" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F05-EventSourceCreation-resized-1.gif" alt="Demo of creating a serverless event source" width="639" height="314" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-752557" class="wp-caption-text"&gt;Figure 5: Create OpenShift Serverless event sources in the web console.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;New pipeline capabilities&lt;/h3&gt; &lt;p&gt;OpenShift 4.5 provides new pipeline capabilities when the &lt;a href="https://developers.redhat.com/blog/tag/pipelines/"&gt;OpenShift Pipelines Operator&lt;/a&gt; is installed. Among other enhancements to pipelines, developers can now:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Add triggers to their pipelines (webhook support).&lt;/li&gt; &lt;li&gt;Mount volumes as workspaces when starting a pipeline.&lt;/li&gt; &lt;li&gt;Provide credentials for Git repositories and image registries, as needed.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Figure 6 shows the new option for providing credentials for Git repositories and image registries.&lt;/p&gt; &lt;div id="attachment_746657" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F06-Pipeline-CredentialOptions.png"&gt;&lt;img aria-describedby="caption-attachment-746657" class="wp-image-746657 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F06-Pipeline-CredentialOptions-1024x504.png" alt="A screenshot of the new pipeline credentials feature in the web console." width="640" height="315" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F06-Pipeline-CredentialOptions-1024x504.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F06-Pipeline-CredentialOptions-300x148.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F06-Pipeline-CredentialOptions-768x378.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746657" class="wp-caption-text"&gt;Figure 6: The new pipeline credential options in OpenShift 4.5.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;A unified experience for virtual machines alongside containers&lt;/h3&gt; &lt;p&gt;When the forthcoming &lt;a href="https://developers.redhat.com/blog/2020/01/21/first-steps-with-the-data-virtualization-operator-for-red-hat-openshift/"&gt;OpenShift Virtualization Operator 2.4&lt;/a&gt; is installed, developers will be able to import their virtual machines (VMs) from &lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/technologies/virtualization/enterprise-virtualization"&gt;Red Hat Virtualization&lt;/a&gt; or VMware through a guided experience.&lt;/p&gt; &lt;p&gt;Virtual machines will be exposed in the Topology view. As developers would normally expect, VM actions such as start, stop, terminate, and access will be included.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: OpenShift Virtualization Operator 2.4 will be released shortly after OpenShift 4.5. Look for release news and information in an upcoming article.&lt;/p&gt; &lt;h3&gt;Easy access to the web terminal&lt;/h3&gt; &lt;p&gt;The web terminal provides you with the ability to use command-line interface (CLI) tools directly from your OpenShift web console. CLIs such as &lt;code&gt;oc&lt;/code&gt;, &lt;code&gt;odo&lt;/code&gt;, and &lt;code&gt;kubectl&lt;/code&gt; will be pre-installed and fully authenticated when you need them. The terminal window can be resized, minimized, and opened in a new tab. As shown in Figure 7, an icon in the masthead lets you create a web terminal. You can then use CLI tools directly from the web console.&lt;/p&gt; &lt;div id="attachment_746667" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F08-Terminal.png"&gt;&lt;img aria-describedby="caption-attachment-746667" class="wp-image-746667 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F08-Terminal-1024x502.png" alt="A screenshot of the new command-line terminal." width="640" height="314" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F08-Terminal-1024x502.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F08-Terminal-300x147.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/45-WhatsNew-F08-Terminal-768x376.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-746667" class="wp-caption-text"&gt;Figure 7: Use command-line tools directly from the web terminal.&lt;/p&gt;&lt;/div&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: This feature is Operator enabled, and will be coming as an update soon after the OpenShift 4.5 release. Stay tuned for a future article with more information.&lt;/p&gt; &lt;h2&gt;Take a tour of what&amp;#8217;s new&lt;/h2&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/S3sN8sPoO3g?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h2&gt;Give us your feedback!&lt;/h2&gt; &lt;p&gt;A huge part of the OpenShift developer experience is receiving feedback and collaborating with our community and customers. We&amp;#8217;d love to hear from you. We hope you will share your thoughts on the &lt;a target="_blank" rel="nofollow" href="https://forms.gle/zDd4tuWvjndCRVMD8"&gt;OpenShift 4.5 Developer Experience feedback page&lt;/a&gt;. You can also join our &lt;a target="_blank" rel="nofollow" href="https://groups.google.com/forum/#!forum/openshift-dev-users"&gt;OpenShift Developer Experience Google Group&lt;/a&gt; to participate in discussions and learn about our Office Hours sessions, where you can collaborate with us and provide feedback about your experience using the OpenShift web console.&lt;/p&gt; &lt;h2&gt;Get started with OpenShift 4.5&lt;/h2&gt; &lt;p&gt;Are you ready to get started with the new OpenShift 4.5 web console? &lt;a target="_blank" rel="nofollow" href="http://www.openshift.com/try"&gt;Try OpenShift 4.5 today&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F16%2Fwhats-new-in-the-openshift-4-5-console-developer-experience%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20the%20OpenShift%204.5%20console%20developer%20experience" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F16%2Fwhats-new-in-the-openshift-4-5-console-developer-experience%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20the%20OpenShift%204.5%20console%20developer%20experience" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F16%2Fwhats-new-in-the-openshift-4-5-console-developer-experience%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20the%20OpenShift%204.5%20console%20developer%20experience" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F16%2Fwhats-new-in-the-openshift-4-5-console-developer-experience%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20the%20OpenShift%204.5%20console%20developer%20experience" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F16%2Fwhats-new-in-the-openshift-4-5-console-developer-experience%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20the%20OpenShift%204.5%20console%20developer%20experience" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F16%2Fwhats-new-in-the-openshift-4-5-console-developer-experience%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20the%20OpenShift%204.5%20console%20developer%20experience" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F16%2Fwhats-new-in-the-openshift-4-5-console-developer-experience%2F&amp;#38;linkname=What%E2%80%99s%20new%20in%20the%20OpenShift%204.5%20console%20developer%20experience" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F16%2Fwhats-new-in-the-openshift-4-5-console-developer-experience%2F&amp;#038;title=What%E2%80%99s%20new%20in%20the%20OpenShift%204.5%20console%20developer%20experience" data-a2a-url="https://developers.redhat.com/blog/2020/07/16/whats-new-in-the-openshift-4-5-console-developer-experience/" data-a2a-title="What’s new in the OpenShift 4.5 console developer experience"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/16/whats-new-in-the-openshift-4-5-console-developer-experience/"&gt;What’s new in the OpenShift 4.5 console developer experience&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ipisJDE4llI" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Each new release of Red Hat OpenShift includes usability improvements and features to help developers meet their goals. In OpenShift 4.5, we&amp;#8217;ve improved navigation and added a mechanism for customizing navigation and accessing frequently used resources from the Developer perspective. We&amp;#8217;ve also brought application health checks back, added capabilities for Helm, and improved Red Hat [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/16/whats-new-in-the-openshift-4-5-console-developer-experience/"&gt;What’s new in the OpenShift 4.5 console developer experience&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/07/16/whats-new-in-the-openshift-4-5-console-developer-experience/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">746567</post-id><dc:creator>Serena Chechile Nichols</dc:creator><dc:date>2020-07-16T07:00:37Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/16/whats-new-in-the-openshift-4-5-console-developer-experience/</feedburner:origLink></entry></feed>
